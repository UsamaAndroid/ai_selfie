"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/uploadthing";
exports.ids = ["vendor-chunks/uploadthing"];
exports.modules = {

/***/ "(rsc)/./node_modules/uploadthing/dist/deprecations-pLmw6Ytd.js":
/*!****************************************************************!*\
  !*** ./node_modules/uploadthing/dist/deprecations-pLmw6Ytd.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logDeprecationWarning: () => (/* binding */ logDeprecationWarning)\n/* harmony export */ });\n//#region src/_internal/deprecations.ts\nconst logDeprecationWarning = (message) => {\n\tconsole.warn(`⚠️ [uploadthing][deprecated] ${message}`);\n};\n\n//#endregion\n\n//# sourceMappingURL=deprecations-pLmw6Ytd.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdXBsb2FkdGhpbmcvZGlzdC9kZXByZWNhdGlvbnMtcExtdzZZdGQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQSw4Q0FBOEMsUUFBUTtBQUN0RDs7QUFFQTtBQUNpQztBQUNqQyIsInNvdXJjZXMiOlsiL1VzZXJzL3VzYW1hL0RvY3VtZW50cy9HaXRIdWIvYWlfc2VsZmllL25vZGVfbW9kdWxlcy91cGxvYWR0aGluZy9kaXN0L2RlcHJlY2F0aW9ucy1wTG13Nll0ZC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyNyZWdpb24gc3JjL19pbnRlcm5hbC9kZXByZWNhdGlvbnMudHNcbmNvbnN0IGxvZ0RlcHJlY2F0aW9uV2FybmluZyA9IChtZXNzYWdlKSA9PiB7XG5cdGNvbnNvbGUud2Fybihg4pqg77iPIFt1cGxvYWR0aGluZ11bZGVwcmVjYXRlZF0gJHttZXNzYWdlfWApO1xufTtcblxuLy8jZW5kcmVnaW9uXG5leHBvcnQgeyBsb2dEZXByZWNhdGlvbldhcm5pbmcgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlcHJlY2F0aW9ucy1wTG13Nll0ZC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/uploadthing/dist/deprecations-pLmw6Ytd.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/uploadthing/dist/package-Beb-iarE.js":
/*!***********************************************************!*\
  !*** ./node_modules/uploadthing/dist/package-Beb-iarE.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\n//#region package.json\nvar version = \"7.7.3\";\n\n//#endregion\n\n//# sourceMappingURL=package-Beb-iarE.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdXBsb2FkdGhpbmcvZGlzdC9wYWNrYWdlLUJlYi1pYXJFLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBOztBQUVBO0FBQ21CO0FBQ25CIiwic291cmNlcyI6WyIvVXNlcnMvdXNhbWEvRG9jdW1lbnRzL0dpdEh1Yi9haV9zZWxmaWUvbm9kZV9tb2R1bGVzL3VwbG9hZHRoaW5nL2Rpc3QvcGFja2FnZS1CZWItaWFyRS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyNyZWdpb24gcGFja2FnZS5qc29uXG52YXIgdmVyc2lvbiA9IFwiNy43LjNcIjtcblxuLy8jZW5kcmVnaW9uXG5leHBvcnQgeyB2ZXJzaW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWNrYWdlLUJlYi1pYXJFLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/uploadthing/dist/package-Beb-iarE.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/uploadthing/dist/shared-schemas-BIFDoqPF.js":
/*!******************************************************************!*\
  !*** ./node_modules/uploadthing/dist/shared-schemas-BIFDoqPF.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ActionType: () => (/* binding */ ActionType),\n/* harmony export */   CallbackResultResponse: () => (/* binding */ CallbackResultResponse),\n/* harmony export */   MetadataFetchResponse: () => (/* binding */ MetadataFetchResponse),\n/* harmony export */   MetadataFetchStreamPart: () => (/* binding */ MetadataFetchStreamPart),\n/* harmony export */   UploadActionPayload: () => (/* binding */ UploadActionPayload),\n/* harmony export */   UploadThingHook: () => (/* binding */ UploadThingHook),\n/* harmony export */   UploadThingToken$1: () => (/* binding */ UploadThingToken),\n/* harmony export */   UploadedFileData$1: () => (/* binding */ UploadedFileData)\n/* harmony export */ });\n/* harmony import */ var _uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @uploadthing/shared */ \"(rsc)/./node_modules/@uploadthing/shared/dist/index.js\");\n/* harmony import */ var effect_Schema__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! effect/Schema */ \"(rsc)/./node_modules/effect/dist/esm/Schema.js\");\n\n\n\n//#region src/_internal/shared-schemas.ts\nconst ContentDispositionSchema = effect_Schema__WEBPACK_IMPORTED_MODULE_0__.Literal(..._uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.ValidContentDispositions);\nconst ACLSchema = effect_Schema__WEBPACK_IMPORTED_MODULE_0__.Literal(..._uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.ValidACLs);\n/**\n* Valid options for the `?actionType` query param\n*/\nconst ActionType = effect_Schema__WEBPACK_IMPORTED_MODULE_0__.Literal(\"upload\");\n/**\n* Valid options for the `uploadthing-hook` header\n* for requests coming from UT server\n*/\nconst UploadThingHook = effect_Schema__WEBPACK_IMPORTED_MODULE_0__.Literal(\"callback\", \"error\");\n/**\n* =============================================================================\n* =========================== Configuration ===================================\n* =============================================================================\n*/\nconst DecodeString = effect_Schema__WEBPACK_IMPORTED_MODULE_0__.transform(effect_Schema__WEBPACK_IMPORTED_MODULE_0__.Uint8ArrayFromSelf, effect_Schema__WEBPACK_IMPORTED_MODULE_0__.String, {\n\tdecode: (data) => new TextDecoder().decode(data),\n\tencode: (data) => new TextEncoder().encode(data)\n});\nconst ParsedToken = effect_Schema__WEBPACK_IMPORTED_MODULE_0__.Struct({\n\tapiKey: effect_Schema__WEBPACK_IMPORTED_MODULE_0__.Redacted(effect_Schema__WEBPACK_IMPORTED_MODULE_0__.String.pipe(effect_Schema__WEBPACK_IMPORTED_MODULE_0__.startsWith(\"sk_\"))),\n\tappId: effect_Schema__WEBPACK_IMPORTED_MODULE_0__.String,\n\tregions: effect_Schema__WEBPACK_IMPORTED_MODULE_0__.NonEmptyArray(effect_Schema__WEBPACK_IMPORTED_MODULE_0__.String),\n\tingestHost: effect_Schema__WEBPACK_IMPORTED_MODULE_0__.String.pipe(effect_Schema__WEBPACK_IMPORTED_MODULE_0__.optionalWith({ default: () => \"ingest.uploadthing.com\" }))\n});\nconst UploadThingToken = effect_Schema__WEBPACK_IMPORTED_MODULE_0__.Uint8ArrayFromBase64.pipe(effect_Schema__WEBPACK_IMPORTED_MODULE_0__.compose(DecodeString), effect_Schema__WEBPACK_IMPORTED_MODULE_0__.compose(effect_Schema__WEBPACK_IMPORTED_MODULE_0__.parseJson(ParsedToken)));\n/**\n* =============================================================================\n* ======================== File Type Hierarchy ===============================\n* =============================================================================\n*/\n/**\n* Properties from the web File object, this is what the client sends when initiating an upload\n*/\nvar FileUploadData = class extends effect_Schema__WEBPACK_IMPORTED_MODULE_0__.Class(\"FileUploadData\")({\n\tname: effect_Schema__WEBPACK_IMPORTED_MODULE_0__.String,\n\tsize: effect_Schema__WEBPACK_IMPORTED_MODULE_0__.Number,\n\ttype: effect_Schema__WEBPACK_IMPORTED_MODULE_0__.String,\n\tlastModified: effect_Schema__WEBPACK_IMPORTED_MODULE_0__.Number.pipe(effect_Schema__WEBPACK_IMPORTED_MODULE_0__.optional)\n}) {};\n/**\n* `.middleware()` can add a customId to the incoming file data\n*/\nvar FileUploadDataWithCustomId = class extends FileUploadData.extend(\"FileUploadDataWithCustomId\")({ customId: effect_Schema__WEBPACK_IMPORTED_MODULE_0__.NullOr(effect_Schema__WEBPACK_IMPORTED_MODULE_0__.String) }) {};\n/**\n* When files are uploaded, we get back\n* - a key\n* - URLs for the file\n* - the hash (md5-hex) of the uploaded file's contents\n*/\nvar UploadedFileData = class extends FileUploadDataWithCustomId.extend(\"UploadedFileData\")({\n\tkey: effect_Schema__WEBPACK_IMPORTED_MODULE_0__.String,\n\turl: effect_Schema__WEBPACK_IMPORTED_MODULE_0__.String,\n\tappUrl: effect_Schema__WEBPACK_IMPORTED_MODULE_0__.String,\n\tufsUrl: effect_Schema__WEBPACK_IMPORTED_MODULE_0__.String,\n\tfileHash: effect_Schema__WEBPACK_IMPORTED_MODULE_0__.String\n}) {};\nvar MetadataFetchStreamPart = class extends effect_Schema__WEBPACK_IMPORTED_MODULE_0__.Class(\"MetadataFetchStreamPart\")({\n\tpayload: effect_Schema__WEBPACK_IMPORTED_MODULE_0__.String,\n\tsignature: effect_Schema__WEBPACK_IMPORTED_MODULE_0__.String,\n\thook: UploadThingHook\n}) {};\nvar MetadataFetchResponse = class extends effect_Schema__WEBPACK_IMPORTED_MODULE_0__.Class(\"MetadataFetchResponse\")({ ok: effect_Schema__WEBPACK_IMPORTED_MODULE_0__.Boolean }) {};\nvar CallbackResultResponse = class extends effect_Schema__WEBPACK_IMPORTED_MODULE_0__.Class(\"CallbackResultResponse\")({ ok: effect_Schema__WEBPACK_IMPORTED_MODULE_0__.Boolean }) {};\n/**\n* =============================================================================\n* ======================== Client Action Payloads ============================\n* =============================================================================\n*/\nvar UploadActionPayload = class extends effect_Schema__WEBPACK_IMPORTED_MODULE_0__.Class(\"UploadActionPayload\")({\n\tfiles: effect_Schema__WEBPACK_IMPORTED_MODULE_0__.Array(FileUploadData),\n\tinput: effect_Schema__WEBPACK_IMPORTED_MODULE_0__.Unknown\n}) {};\n\n//#endregion\n\n//# sourceMappingURL=shared-schemas-BIFDoqPF.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdXBsb2FkdGhpbmcvZGlzdC9zaGFyZWQtc2NoZW1hcy1CSUZEb3FQRi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQTBFO0FBQ3ZDOztBQUVuQztBQUNBLGlDQUFpQyxrREFBUyxJQUFJLHlFQUF3QjtBQUN0RSxrQkFBa0Isa0RBQVMsSUFBSSwwREFBUztBQUN4QztBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsa0RBQVM7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0Isa0RBQVM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixvREFBVyxDQUFDLDZEQUFvQixFQUFFLGlEQUFRO0FBQy9EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsb0JBQW9CLGlEQUFRO0FBQzVCLFNBQVMsbURBQVUsQ0FBQyxpREFBUSxNQUFNLHFEQUFZO0FBQzlDLFFBQVEsaURBQVE7QUFDaEIsVUFBVSx3REFBZSxDQUFDLGlEQUFRO0FBQ2xDLGFBQWEsaURBQVEsTUFBTSx1REFBYyxHQUFHLHlDQUF5QztBQUNyRixDQUFDO0FBQ0QseUJBQXlCLCtEQUFzQixNQUFNLGtEQUFTLGdCQUFnQixrREFBUyxDQUFDLG9EQUFXO0FBQ25HO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsZ0RBQU87QUFDMUMsT0FBTyxpREFBUTtBQUNmLE9BQU8saURBQVE7QUFDZixPQUFPLGlEQUFRO0FBQ2YsZUFBZSxpREFBUSxNQUFNLG1EQUFVO0FBQ3ZDLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxxR0FBcUcsVUFBVSxpREFBUSxDQUFDLGlEQUFRLEdBQUc7QUFDbkk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLGlEQUFRO0FBQ2QsTUFBTSxpREFBUTtBQUNkLFNBQVMsaURBQVE7QUFDakIsU0FBUyxpREFBUTtBQUNqQixXQUFXLGlEQUFRO0FBQ25CLENBQUM7QUFDRCw0Q0FBNEMsZ0RBQU87QUFDbkQsVUFBVSxpREFBUTtBQUNsQixZQUFZLGlEQUFRO0FBQ3BCO0FBQ0EsQ0FBQztBQUNELDBDQUEwQyxnREFBTyw0QkFBNEIsSUFBSSxrREFBUyxFQUFFO0FBQzVGLDJDQUEyQyxnREFBTyw2QkFBNkIsSUFBSSxrREFBUyxFQUFFO0FBQzlGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MsZ0RBQU87QUFDL0MsUUFBUSxnREFBTztBQUNmLFFBQVEsa0RBQVM7QUFDakIsQ0FBQzs7QUFFRDtBQUNvTjtBQUNwTiIsInNvdXJjZXMiOlsiL1VzZXJzL3VzYW1hL0RvY3VtZW50cy9HaXRIdWIvYWlfc2VsZmllL25vZGVfbW9kdWxlcy91cGxvYWR0aGluZy9kaXN0L3NoYXJlZC1zY2hlbWFzLUJJRkRvcVBGLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFZhbGlkQUNMcywgVmFsaWRDb250ZW50RGlzcG9zaXRpb25zIH0gZnJvbSBcIkB1cGxvYWR0aGluZy9zaGFyZWRcIjtcbmltcG9ydCAqIGFzIFMgZnJvbSBcImVmZmVjdC9TY2hlbWFcIjtcblxuLy8jcmVnaW9uIHNyYy9faW50ZXJuYWwvc2hhcmVkLXNjaGVtYXMudHNcbmNvbnN0IENvbnRlbnREaXNwb3NpdGlvblNjaGVtYSA9IFMuTGl0ZXJhbCguLi5WYWxpZENvbnRlbnREaXNwb3NpdGlvbnMpO1xuY29uc3QgQUNMU2NoZW1hID0gUy5MaXRlcmFsKC4uLlZhbGlkQUNMcyk7XG4vKipcbiogVmFsaWQgb3B0aW9ucyBmb3IgdGhlIGA/YWN0aW9uVHlwZWAgcXVlcnkgcGFyYW1cbiovXG5jb25zdCBBY3Rpb25UeXBlID0gUy5MaXRlcmFsKFwidXBsb2FkXCIpO1xuLyoqXG4qIFZhbGlkIG9wdGlvbnMgZm9yIHRoZSBgdXBsb2FkdGhpbmctaG9va2AgaGVhZGVyXG4qIGZvciByZXF1ZXN0cyBjb21pbmcgZnJvbSBVVCBzZXJ2ZXJcbiovXG5jb25zdCBVcGxvYWRUaGluZ0hvb2sgPSBTLkxpdGVyYWwoXCJjYWxsYmFja1wiLCBcImVycm9yXCIpO1xuLyoqXG4qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4qID09PT09PT09PT09PT09PT09PT09PT09PT09PSBDb25maWd1cmF0aW9uID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4qL1xuY29uc3QgRGVjb2RlU3RyaW5nID0gUy50cmFuc2Zvcm0oUy5VaW50OEFycmF5RnJvbVNlbGYsIFMuU3RyaW5nLCB7XG5cdGRlY29kZTogKGRhdGEpID0+IG5ldyBUZXh0RGVjb2RlcigpLmRlY29kZShkYXRhKSxcblx0ZW5jb2RlOiAoZGF0YSkgPT4gbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKGRhdGEpXG59KTtcbmNvbnN0IFBhcnNlZFRva2VuID0gUy5TdHJ1Y3Qoe1xuXHRhcGlLZXk6IFMuUmVkYWN0ZWQoUy5TdHJpbmcucGlwZShTLnN0YXJ0c1dpdGgoXCJza19cIikpKSxcblx0YXBwSWQ6IFMuU3RyaW5nLFxuXHRyZWdpb25zOiBTLk5vbkVtcHR5QXJyYXkoUy5TdHJpbmcpLFxuXHRpbmdlc3RIb3N0OiBTLlN0cmluZy5waXBlKFMub3B0aW9uYWxXaXRoKHsgZGVmYXVsdDogKCkgPT4gXCJpbmdlc3QudXBsb2FkdGhpbmcuY29tXCIgfSkpXG59KTtcbmNvbnN0IFVwbG9hZFRoaW5nVG9rZW4gPSBTLlVpbnQ4QXJyYXlGcm9tQmFzZTY0LnBpcGUoUy5jb21wb3NlKERlY29kZVN0cmluZyksIFMuY29tcG9zZShTLnBhcnNlSnNvbihQYXJzZWRUb2tlbikpKTtcbi8qKlxuKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuKiA9PT09PT09PT09PT09PT09PT09PT09PT0gRmlsZSBUeXBlIEhpZXJhcmNoeSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4qL1xuLyoqXG4qIFByb3BlcnRpZXMgZnJvbSB0aGUgd2ViIEZpbGUgb2JqZWN0LCB0aGlzIGlzIHdoYXQgdGhlIGNsaWVudCBzZW5kcyB3aGVuIGluaXRpYXRpbmcgYW4gdXBsb2FkXG4qL1xudmFyIEZpbGVVcGxvYWREYXRhID0gY2xhc3MgZXh0ZW5kcyBTLkNsYXNzKFwiRmlsZVVwbG9hZERhdGFcIikoe1xuXHRuYW1lOiBTLlN0cmluZyxcblx0c2l6ZTogUy5OdW1iZXIsXG5cdHR5cGU6IFMuU3RyaW5nLFxuXHRsYXN0TW9kaWZpZWQ6IFMuTnVtYmVyLnBpcGUoUy5vcHRpb25hbClcbn0pIHt9O1xuLyoqXG4qIGAubWlkZGxld2FyZSgpYCBjYW4gYWRkIGEgY3VzdG9tSWQgdG8gdGhlIGluY29taW5nIGZpbGUgZGF0YVxuKi9cbnZhciBGaWxlVXBsb2FkRGF0YVdpdGhDdXN0b21JZCA9IGNsYXNzIGV4dGVuZHMgRmlsZVVwbG9hZERhdGEuZXh0ZW5kKFwiRmlsZVVwbG9hZERhdGFXaXRoQ3VzdG9tSWRcIikoeyBjdXN0b21JZDogUy5OdWxsT3IoUy5TdHJpbmcpIH0pIHt9O1xuLyoqXG4qIFdoZW4gZmlsZXMgYXJlIHVwbG9hZGVkLCB3ZSBnZXQgYmFja1xuKiAtIGEga2V5XG4qIC0gVVJMcyBmb3IgdGhlIGZpbGVcbiogLSB0aGUgaGFzaCAobWQ1LWhleCkgb2YgdGhlIHVwbG9hZGVkIGZpbGUncyBjb250ZW50c1xuKi9cbnZhciBVcGxvYWRlZEZpbGVEYXRhID0gY2xhc3MgZXh0ZW5kcyBGaWxlVXBsb2FkRGF0YVdpdGhDdXN0b21JZC5leHRlbmQoXCJVcGxvYWRlZEZpbGVEYXRhXCIpKHtcblx0a2V5OiBTLlN0cmluZyxcblx0dXJsOiBTLlN0cmluZyxcblx0YXBwVXJsOiBTLlN0cmluZyxcblx0dWZzVXJsOiBTLlN0cmluZyxcblx0ZmlsZUhhc2g6IFMuU3RyaW5nXG59KSB7fTtcbnZhciBNZXRhZGF0YUZldGNoU3RyZWFtUGFydCA9IGNsYXNzIGV4dGVuZHMgUy5DbGFzcyhcIk1ldGFkYXRhRmV0Y2hTdHJlYW1QYXJ0XCIpKHtcblx0cGF5bG9hZDogUy5TdHJpbmcsXG5cdHNpZ25hdHVyZTogUy5TdHJpbmcsXG5cdGhvb2s6IFVwbG9hZFRoaW5nSG9va1xufSkge307XG52YXIgTWV0YWRhdGFGZXRjaFJlc3BvbnNlID0gY2xhc3MgZXh0ZW5kcyBTLkNsYXNzKFwiTWV0YWRhdGFGZXRjaFJlc3BvbnNlXCIpKHsgb2s6IFMuQm9vbGVhbiB9KSB7fTtcbnZhciBDYWxsYmFja1Jlc3VsdFJlc3BvbnNlID0gY2xhc3MgZXh0ZW5kcyBTLkNsYXNzKFwiQ2FsbGJhY2tSZXN1bHRSZXNwb25zZVwiKSh7IG9rOiBTLkJvb2xlYW4gfSkge307XG4vKipcbiogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiogPT09PT09PT09PT09PT09PT09PT09PT09IENsaWVudCBBY3Rpb24gUGF5bG9hZHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuKi9cbnZhciBVcGxvYWRBY3Rpb25QYXlsb2FkID0gY2xhc3MgZXh0ZW5kcyBTLkNsYXNzKFwiVXBsb2FkQWN0aW9uUGF5bG9hZFwiKSh7XG5cdGZpbGVzOiBTLkFycmF5KEZpbGVVcGxvYWREYXRhKSxcblx0aW5wdXQ6IFMuVW5rbm93blxufSkge307XG5cbi8vI2VuZHJlZ2lvblxuZXhwb3J0IHsgQWN0aW9uVHlwZSwgQ2FsbGJhY2tSZXN1bHRSZXNwb25zZSwgTWV0YWRhdGFGZXRjaFJlc3BvbnNlLCBNZXRhZGF0YUZldGNoU3RyZWFtUGFydCwgVXBsb2FkQWN0aW9uUGF5bG9hZCwgVXBsb2FkVGhpbmdIb29rLCBVcGxvYWRUaGluZ1Rva2VuIGFzIFVwbG9hZFRoaW5nVG9rZW4kMSwgVXBsb2FkZWRGaWxlRGF0YSBhcyBVcGxvYWRlZEZpbGVEYXRhJDEgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNoYXJlZC1zY2hlbWFzLUJJRkRvcVBGLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/uploadthing/dist/shared-schemas-BIFDoqPF.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/uploadthing/dist/upload-builder-e0_p9NOT.js":
/*!******************************************************************!*\
  !*** ./node_modules/uploadthing/dist/upload-builder-e0_p9NOT.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AdapterArguments: () => (/* binding */ AdapterArguments),\n/* harmony export */   ApiUrl: () => (/* binding */ ApiUrl),\n/* harmony export */   IngestUrl: () => (/* binding */ IngestUrl),\n/* harmony export */   UTFiles$1: () => (/* binding */ UTFiles),\n/* harmony export */   UTRegion$1: () => (/* binding */ UTRegion),\n/* harmony export */   UTToken: () => (/* binding */ UTToken),\n/* harmony export */   UfsAppIdLocation: () => (/* binding */ UfsAppIdLocation),\n/* harmony export */   UfsHost: () => (/* binding */ UfsHost),\n/* harmony export */   configProvider: () => (/* binding */ configProvider),\n/* harmony export */   createBuilder: () => (/* binding */ createBuilder),\n/* harmony export */   createRequestHandler: () => (/* binding */ createRequestHandler),\n/* harmony export */   extractRouterConfig: () => (/* binding */ extractRouterConfig),\n/* harmony export */   logHttpClientError: () => (/* binding */ logHttpClientError),\n/* harmony export */   logHttpClientResponse: () => (/* binding */ logHttpClientResponse),\n/* harmony export */   makeAdapterHandler: () => (/* binding */ makeAdapterHandler),\n/* harmony export */   makeRuntime: () => (/* binding */ makeRuntime)\n/* harmony export */ });\n/* harmony import */ var _package_Beb_iarE_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./package-Beb-iarE.js */ \"(rsc)/./node_modules/uploadthing/dist/package-Beb-iarE.js\");\n/* harmony import */ var _deprecations_pLmw6Ytd_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./deprecations-pLmw6Ytd.js */ \"(rsc)/./node_modules/uploadthing/dist/deprecations-pLmw6Ytd.js\");\n/* harmony import */ var _shared_schemas_BIFDoqPF_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./shared-schemas-BIFDoqPF.js */ \"(rsc)/./node_modules/uploadthing/dist/shared-schemas-BIFDoqPF.js\");\n/* harmony import */ var _uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @uploadthing/shared */ \"(rsc)/./node_modules/@uploadthing/shared/dist/index.js\");\n/* harmony import */ var effect_Effect__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! effect/Effect */ \"(rsc)/./node_modules/effect/dist/esm/Effect.js\");\n/* harmony import */ var _effect_platform_HttpApp__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @effect/platform/HttpApp */ \"(rsc)/./node_modules/@effect/platform/dist/esm/HttpApp.js\");\n/* harmony import */ var _effect_platform_HttpBody__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! @effect/platform/HttpBody */ \"(rsc)/./node_modules/@effect/platform/dist/esm/HttpBody.js\");\n/* harmony import */ var _effect_platform_HttpClient__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @effect/platform/HttpClient */ \"(rsc)/./node_modules/@effect/platform/dist/esm/HttpClient.js\");\n/* harmony import */ var _effect_platform_HttpClientRequest__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @effect/platform/HttpClientRequest */ \"(rsc)/./node_modules/@effect/platform/dist/esm/HttpClientRequest.js\");\n/* harmony import */ var _effect_platform_HttpClientResponse__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! @effect/platform/HttpClientResponse */ \"(rsc)/./node_modules/@effect/platform/dist/esm/HttpIncomingMessage.js\");\n/* harmony import */ var _effect_platform_HttpClientResponse__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! @effect/platform/HttpClientResponse */ \"(rsc)/./node_modules/@effect/platform/dist/esm/HttpClientResponse.js\");\n/* harmony import */ var _effect_platform_HttpRouter__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @effect/platform/HttpRouter */ \"(rsc)/./node_modules/@effect/platform/dist/esm/HttpRouter.js\");\n/* harmony import */ var _effect_platform_HttpServerRequest__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @effect/platform/HttpServerRequest */ \"(rsc)/./node_modules/@effect/platform/dist/esm/HttpServerRequest.js\");\n/* harmony import */ var _effect_platform_HttpServerResponse__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @effect/platform/HttpServerResponse */ \"(rsc)/./node_modules/@effect/platform/dist/esm/HttpServerResponse.js\");\n/* harmony import */ var effect_Config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! effect/Config */ \"(rsc)/./node_modules/effect/dist/esm/Config.js\");\n/* harmony import */ var effect_Context__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! effect/Context */ \"(rsc)/./node_modules/effect/dist/esm/Context.js\");\n/* harmony import */ var effect_Match__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! effect/Match */ \"(rsc)/./node_modules/effect/dist/esm/Match.js\");\n/* harmony import */ var effect_Redacted__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! effect/Redacted */ \"(rsc)/./node_modules/effect/dist/esm/Redacted.js\");\n/* harmony import */ var effect_Schema__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! effect/Schema */ \"(rsc)/./node_modules/effect/dist/esm/Schema.js\");\n/* harmony import */ var effect_ConfigProvider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! effect/ConfigProvider */ \"(rsc)/./node_modules/effect/dist/esm/ConfigProvider.js\");\n/* harmony import */ var effect_Stream__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! effect/Stream */ \"(rsc)/./node_modules/effect/dist/esm/Stream.js\");\n/* harmony import */ var effect_ConfigError__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! effect/ConfigError */ \"(rsc)/./node_modules/effect/dist/esm/ConfigError.js\");\n/* harmony import */ var effect_Either__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! effect/Either */ \"(rsc)/./node_modules/effect/dist/esm/Either.js\");\n/* harmony import */ var effect_Layer__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! effect/Layer */ \"(rsc)/./node_modules/effect/dist/esm/Layer.js\");\n/* harmony import */ var effect_Logger__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! effect/Logger */ \"(rsc)/./node_modules/effect/dist/esm/Logger.js\");\n/* harmony import */ var effect_LogLevel__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! effect/LogLevel */ \"(rsc)/./node_modules/effect/dist/esm/LogLevel.js\");\n/* harmony import */ var effect_Cause__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! effect/Cause */ \"(rsc)/./node_modules/effect/dist/esm/Cause.js\");\n/* harmony import */ var effect_Data__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! effect/Data */ \"(rsc)/./node_modules/effect/dist/esm/Data.js\");\n/* harmony import */ var effect_Runtime__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! effect/Runtime */ \"(rsc)/./node_modules/effect/dist/esm/Runtime.js\");\n/* harmony import */ var _effect_platform_FetchHttpClient__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @effect/platform/FetchHttpClient */ \"(rsc)/./node_modules/@effect/platform/dist/esm/FetchHttpClient.js\");\n/* harmony import */ var _effect_platform_Headers__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @effect/platform/Headers */ \"(rsc)/./node_modules/@effect/platform/dist/esm/Headers.js\");\n/* harmony import */ var effect_FiberRef__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! effect/FiberRef */ \"(rsc)/./node_modules/effect/dist/esm/FiberRef.js\");\n/* harmony import */ var effect_ManagedRuntime__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! effect/ManagedRuntime */ \"(rsc)/./node_modules/effect/dist/esm/ManagedRuntime.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//#region src/_internal/config.ts\n/**\n* Merge in `import.meta.env` to the built-in `process.env` provider\n* Prefix keys with `UPLOADTHING_` so we can reference just the name.\n* @example\n* process.env.UPLOADTHING_TOKEN = \"foo\"\n* Config.string(\"token\"); // Config<\"foo\">\n*/\nconst envProvider = effect_ConfigProvider__WEBPACK_IMPORTED_MODULE_0__.fromEnv().pipe(effect_ConfigProvider__WEBPACK_IMPORTED_MODULE_0__.orElse(() => effect_ConfigProvider__WEBPACK_IMPORTED_MODULE_0__.fromMap(new Map(Object.entries((0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.filterDefinedObjectValues)( null ?? {}))), { pathDelim: \"_\" })), effect_ConfigProvider__WEBPACK_IMPORTED_MODULE_0__.nested(\"uploadthing\"), effect_ConfigProvider__WEBPACK_IMPORTED_MODULE_0__.constantCase);\n/**\n* Config provider that merges the options from the object\n* and environment variables prefixed with `UPLOADTHING_`.\n* @remarks Options take precedence over environment variables.\n*/\nconst configProvider = (options) => effect_ConfigProvider__WEBPACK_IMPORTED_MODULE_0__.fromJson(options ?? {}).pipe(effect_ConfigProvider__WEBPACK_IMPORTED_MODULE_0__.orElse(() => envProvider));\nconst IsDevelopment = effect_Config__WEBPACK_IMPORTED_MODULE_2__.boolean(\"isDev\").pipe(effect_Config__WEBPACK_IMPORTED_MODULE_2__.orElse(() => effect_Config__WEBPACK_IMPORTED_MODULE_2__.succeed(typeof process !== \"undefined\" ? \"development\" : void 0).pipe(effect_Config__WEBPACK_IMPORTED_MODULE_2__.map((_) => _ === \"development\"))), effect_Config__WEBPACK_IMPORTED_MODULE_2__.withDefault(false));\nconst UTToken = effect_Schema__WEBPACK_IMPORTED_MODULE_3__.Config(\"token\", _shared_schemas_BIFDoqPF_js__WEBPACK_IMPORTED_MODULE_4__.UploadThingToken$1).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.catchTags({ ConfigError: (e) => new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.UploadThingError({\n\tcode: e._op === \"InvalidData\" ? \"INVALID_SERVER_CONFIG\" : \"MISSING_ENV\",\n\tmessage: e._op === \"InvalidData\" ? \"Invalid token. A token is a base64 encoded JSON object matching { apiKey: string, appId: string, regions: string[] }.\" : \"Missing token. Please set the `UPLOADTHING_TOKEN` environment variable or provide a token manually through config.\",\n\tcause: e\n}) }));\nconst ApiUrl = effect_Config__WEBPACK_IMPORTED_MODULE_2__.string(\"apiUrl\").pipe(effect_Config__WEBPACK_IMPORTED_MODULE_2__.withDefault(\"https://api.uploadthing.com\"), effect_Config__WEBPACK_IMPORTED_MODULE_2__.mapAttempt((_) => new URL(_)), effect_Config__WEBPACK_IMPORTED_MODULE_2__.map((url) => url.href.replace(/\\/$/, \"\")));\nconst IngestUrl = effect_Effect__WEBPACK_IMPORTED_MODULE_5__.fn(function* (preferredRegion) {\n\tconst { regions, ingestHost } = yield* UTToken;\n\tconst region = preferredRegion ? regions.find((r) => r === preferredRegion) ?? regions[0] : regions[0];\n\treturn yield* effect_Config__WEBPACK_IMPORTED_MODULE_2__.string(\"ingestUrl\").pipe(effect_Config__WEBPACK_IMPORTED_MODULE_2__.withDefault(`https://${region}.${ingestHost}`), effect_Config__WEBPACK_IMPORTED_MODULE_2__.mapAttempt((_) => new URL(_)), effect_Config__WEBPACK_IMPORTED_MODULE_2__.map((url) => url.href.replace(/\\/$/, \"\")));\n});\nconst UtfsHost = effect_Config__WEBPACK_IMPORTED_MODULE_2__.string(\"utfsHost\").pipe(effect_Config__WEBPACK_IMPORTED_MODULE_2__.withDefault(\"utfs.io\"));\nconst UfsHost = effect_Config__WEBPACK_IMPORTED_MODULE_2__.string(\"ufsHost\").pipe(effect_Config__WEBPACK_IMPORTED_MODULE_2__.withDefault(\"ufs.sh\"));\nconst UfsAppIdLocation = effect_Config__WEBPACK_IMPORTED_MODULE_2__.literal(\"subdomain\", \"path\")(\"ufsAppIdLocation\").pipe(effect_Config__WEBPACK_IMPORTED_MODULE_2__.withDefault(\"subdomain\"));\n\n//#endregion\n//#region src/_internal/error-formatter.ts\nfunction defaultErrorFormatter(error) {\n\treturn { message: error.message };\n}\nfunction formatError(error, router) {\n\tconst firstSlug = Object.keys(router)[0];\n\tconst errorFormatter = firstSlug ? router[firstSlug]?.errorFormatter ?? defaultErrorFormatter : defaultErrorFormatter;\n\treturn errorFormatter(error);\n}\n\n//#endregion\n//#region src/_internal/jsonl.ts\nconst handleJsonLineStream = (schema, onChunk) => (stream) => {\n\tlet buf = \"\";\n\treturn stream.pipe(effect_Stream__WEBPACK_IMPORTED_MODULE_6__.decodeText(), effect_Stream__WEBPACK_IMPORTED_MODULE_6__.mapEffect((chunk) => effect_Effect__WEBPACK_IMPORTED_MODULE_5__.gen(function* () {\n\t\tbuf += chunk;\n\t\tconst parts = buf.split(\"\\n\");\n\t\tconst validChunks = [];\n\t\tfor (const part of parts) try {\n\t\t\tvalidChunks.push(JSON.parse(part));\n\t\t\tbuf = buf.slice(part.length + 1);\n\t\t} catch {}\n\t\tyield* effect_Effect__WEBPACK_IMPORTED_MODULE_5__.logDebug(\"Received chunks\").pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.annotateLogs(\"chunk\", chunk), effect_Effect__WEBPACK_IMPORTED_MODULE_5__.annotateLogs(\"parsedChunks\", validChunks), effect_Effect__WEBPACK_IMPORTED_MODULE_5__.annotateLogs(\"buf\", buf));\n\t\treturn validChunks;\n\t})), effect_Stream__WEBPACK_IMPORTED_MODULE_6__.mapEffect(effect_Schema__WEBPACK_IMPORTED_MODULE_3__.decodeUnknown(effect_Schema__WEBPACK_IMPORTED_MODULE_3__.Array(schema))), effect_Stream__WEBPACK_IMPORTED_MODULE_6__.mapEffect(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.forEach((part) => onChunk(part))), effect_Stream__WEBPACK_IMPORTED_MODULE_6__.runDrain, effect_Effect__WEBPACK_IMPORTED_MODULE_5__.withLogSpan(\"handleJsonLineStream\"));\n};\n\n//#endregion\n//#region src/_internal/logger.ts\n/**\n* Config.logLevel counter-intuitively accepts LogLevel[\"label\"]\n* instead of a literal, ripping it and changing to accept literal\n* Effect 4.0 will change this to accept a literal and then we can\n* remove this and go back to the built-in validator.\n*/\nconst ConfigLogLevel = (name) => {\n\tconst config = effect_Config__WEBPACK_IMPORTED_MODULE_2__.mapOrFail(effect_Config__WEBPACK_IMPORTED_MODULE_2__.string(), (literal) => {\n\t\tconst level = effect_LogLevel__WEBPACK_IMPORTED_MODULE_7__.allLevels.find((level$1) => level$1._tag === literal);\n\t\treturn level === void 0 ? effect_Either__WEBPACK_IMPORTED_MODULE_8__.left(effect_ConfigError__WEBPACK_IMPORTED_MODULE_9__.InvalidData([], `Expected a log level but received ${literal}`)) : effect_Either__WEBPACK_IMPORTED_MODULE_8__.right(level);\n\t});\n\treturn name === void 0 ? config : effect_Config__WEBPACK_IMPORTED_MODULE_2__.nested(config, name);\n};\nconst withMinimalLogLevel = ConfigLogLevel(\"logLevel\").pipe(effect_Config__WEBPACK_IMPORTED_MODULE_2__.withDefault(effect_LogLevel__WEBPACK_IMPORTED_MODULE_7__.Info), effect_Effect__WEBPACK_IMPORTED_MODULE_5__.andThen((level) => effect_Logger__WEBPACK_IMPORTED_MODULE_10__.minimumLogLevel(level)), effect_Effect__WEBPACK_IMPORTED_MODULE_5__.tapError((e) => effect_Effect__WEBPACK_IMPORTED_MODULE_5__.logError(\"Invalid log level\").pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.annotateLogs(\"error\", e))), effect_Effect__WEBPACK_IMPORTED_MODULE_5__.catchTag(\"ConfigError\", (e) => new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.UploadThingError({\n\tcode: \"INVALID_SERVER_CONFIG\",\n\tmessage: \"Invalid server configuration\",\n\tcause: e\n})), effect_Layer__WEBPACK_IMPORTED_MODULE_11__.unwrapEffect);\nconst LogFormat = effect_Config__WEBPACK_IMPORTED_MODULE_2__.literal(\"json\", \"logFmt\", \"structured\", \"pretty\")(\"logFormat\");\nconst withLogFormat = effect_Effect__WEBPACK_IMPORTED_MODULE_5__.gen(function* () {\n\tconst isDev = yield* IsDevelopment;\n\tconst logFormat = yield* LogFormat.pipe(effect_Config__WEBPACK_IMPORTED_MODULE_2__.withDefault(isDev ? \"pretty\" : \"json\"));\n\treturn effect_Logger__WEBPACK_IMPORTED_MODULE_10__[logFormat];\n}).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.catchTag(\"ConfigError\", (e) => new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.UploadThingError({\n\tcode: \"INVALID_SERVER_CONFIG\",\n\tmessage: \"Invalid server configuration\",\n\tcause: e\n})), effect_Layer__WEBPACK_IMPORTED_MODULE_11__.unwrapEffect);\nconst logHttpClientResponse = (message, opts) => {\n\tconst mixin = opts?.mixin ?? \"json\";\n\tconst level = effect_LogLevel__WEBPACK_IMPORTED_MODULE_7__.fromLiteral(opts?.level ?? \"Debug\");\n\treturn (response) => effect_Effect__WEBPACK_IMPORTED_MODULE_5__.flatMap(mixin !== \"None\" ? response[mixin] : effect_Effect__WEBPACK_IMPORTED_MODULE_5__[\"void\"], () => effect_Effect__WEBPACK_IMPORTED_MODULE_5__.logWithLevel(level, `${message} (${response.status})`).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.annotateLogs(\"response\", response)));\n};\nconst logHttpClientError = (message) => (err) => err._tag === \"ResponseError\" ? logHttpClientResponse(message, { level: \"Error\" })(err.response) : effect_Effect__WEBPACK_IMPORTED_MODULE_5__.logError(message).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.annotateLogs(\"error\", err));\n\n//#endregion\n//#region src/_internal/parser.ts\nvar ParserError = class extends effect_Data__WEBPACK_IMPORTED_MODULE_12__.TaggedError(\"ParserError\") {\n\tmessage = \"Input validation failed. The original error with it's validation issues is in the error cause.\";\n};\nfunction getParseFn(parser) {\n\tif (\"parseAsync\" in parser && typeof parser.parseAsync === \"function\")\n /**\n\t* Zod\n\t* TODO (next major): Consider wrapping ZodError in ParserError\n\t*/\n\treturn parser.parseAsync;\n\tif (effect_Schema__WEBPACK_IMPORTED_MODULE_3__.isSchema(parser))\n /**\n\t* Effect Schema\n\t*/\n\treturn (value) => effect_Schema__WEBPACK_IMPORTED_MODULE_3__.decodeUnknownPromise(parser)(value).catch((error) => {\n\t\tthrow new ParserError({ cause: effect_Cause__WEBPACK_IMPORTED_MODULE_13__.squash(error[effect_Runtime__WEBPACK_IMPORTED_MODULE_14__.FiberFailureCauseId]) });\n\t});\n\tif (\"~standard\" in parser)\n /**\n\t* Standard Schema\n\t* TODO (next major): Consider moving this to the top of the function\n\t*/\n\treturn async (value) => {\n\t\tconst result = await parser[\"~standard\"].validate(value);\n\t\tif (result.issues) throw new ParserError({ cause: result.issues });\n\t\treturn result.value;\n\t};\n\tthrow new Error(\"Invalid parser\");\n}\n\n//#endregion\n//#region src/_internal/route-config.ts\nvar FileSizeMismatch = class extends effect_Data__WEBPACK_IMPORTED_MODULE_12__.Error {\n\t_tag = \"FileSizeMismatch\";\n\tname = \"FileSizeMismatchError\";\n\tconstructor(type, max, actual) {\n\t\tconst reason = `You uploaded a ${type} file that was ${(0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.bytesToFileSize)(actual)}, but the limit for that type is ${max}`;\n\t\tsuper({ reason });\n\t}\n};\nvar FileCountMismatch = class extends effect_Data__WEBPACK_IMPORTED_MODULE_12__.Error {\n\t_tag = \"FileCountMismatch\";\n\tname = \"FileCountMismatchError\";\n\tconstructor(type, boundtype, bound, actual) {\n\t\tconst reason = `You uploaded ${actual} file(s) of type '${type}', but the ${boundtype} for that type is ${bound}`;\n\t\tsuper({ reason });\n\t}\n};\nconst assertFilesMeetConfig = (files, routeConfig) => effect_Effect__WEBPACK_IMPORTED_MODULE_5__.gen(function* () {\n\tconst counts = {};\n\tfor (const file of files) {\n\t\tconst type = yield* (0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.matchFileType)(file, (0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.objectKeys)(routeConfig));\n\t\tcounts[type] = (counts[type] ?? 0) + 1;\n\t\tconst sizeLimit = routeConfig[type]?.maxFileSize;\n\t\tif (!sizeLimit) return yield* new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.InvalidRouteConfigError(type, \"maxFileSize\");\n\t\tconst sizeLimitBytes = yield* (0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.fileSizeToBytes)(sizeLimit);\n\t\tif (file.size > sizeLimitBytes) return yield* new FileSizeMismatch(type, sizeLimit, file.size);\n\t}\n\tfor (const _key in counts) {\n\t\tconst key = _key;\n\t\tconst config = routeConfig[key];\n\t\tif (!config) return yield* new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.InvalidRouteConfigError(key);\n\t\tconst count = counts[key];\n\t\tconst min = config.minFileCount;\n\t\tconst max = config.maxFileCount;\n\t\tif (min > max) return yield* new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.UploadThingError({\n\t\t\tcode: \"BAD_REQUEST\",\n\t\t\tmessage: \"Invalid config during file count - minFileCount > maxFileCount\",\n\t\t\tcause: `minFileCount must be less than maxFileCount for key ${key}. got: ${min} > ${max}`\n\t\t});\n\t\tif (count != null && count < min) return yield* new FileCountMismatch(key, \"minimum\", min, count);\n\t\tif (count != null && count > max) return yield* new FileCountMismatch(key, \"maximum\", max, count);\n\t}\n\treturn null;\n});\nconst extractRouterConfig = (router) => effect_Effect__WEBPACK_IMPORTED_MODULE_5__.forEach((0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.objectKeys)(router), (slug) => effect_Effect__WEBPACK_IMPORTED_MODULE_5__.map((0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.fillInputRouteConfig)(router[slug].routerConfig), (config) => ({\n\tslug,\n\tconfig\n})));\n\n//#endregion\n//#region src/_internal/runtime.ts\nconst makeRuntime = (fetch, config) => {\n\tconst fetchHttpClient = effect_Layer__WEBPACK_IMPORTED_MODULE_11__.provideMerge(_effect_platform_FetchHttpClient__WEBPACK_IMPORTED_MODULE_15__.layer, effect_Layer__WEBPACK_IMPORTED_MODULE_11__.succeed(_effect_platform_FetchHttpClient__WEBPACK_IMPORTED_MODULE_15__.Fetch, fetch));\n\tconst withRedactedHeaders = effect_Layer__WEBPACK_IMPORTED_MODULE_11__.effectDiscard(effect_FiberRef__WEBPACK_IMPORTED_MODULE_16__.update(_effect_platform_Headers__WEBPACK_IMPORTED_MODULE_17__.currentRedactedNames, (_) => _.concat([\"x-uploadthing-api-key\"])));\n\tconst layer = effect_Layer__WEBPACK_IMPORTED_MODULE_11__.provide(effect_Layer__WEBPACK_IMPORTED_MODULE_11__.mergeAll(withLogFormat, withMinimalLogLevel, fetchHttpClient, withRedactedHeaders), effect_Layer__WEBPACK_IMPORTED_MODULE_11__.setConfigProvider(configProvider(config)));\n\treturn effect_ManagedRuntime__WEBPACK_IMPORTED_MODULE_18__.make(layer);\n};\n\n//#endregion\n//#region src/_internal/types.ts\n/**\n* Marker used to select the region based on the incoming request\n*/\nconst UTRegion = Symbol(\"uploadthing-region-symbol\");\n/**\n* Marker used to append a `customId` to the incoming file data in `.middleware()`\n* @example\n* ```ts\n* .middleware((opts) => {\n*   return {\n*     [UTFiles]: opts.files.map((file) => ({\n*       ...file,\n*       customId: generateId(),\n*     }))\n*   };\n* })\n* ```\n*/\nconst UTFiles = Symbol(\"uploadthing-custom-id-symbol\");\n\n//#endregion\n//#region src/_internal/handler.ts\nvar AdapterArguments = class extends effect_Context__WEBPACK_IMPORTED_MODULE_19__.Tag(\"uploadthing/AdapterArguments\")() {};\n/**\n* Create a request handler adapter for any framework or server library.\n* Refer to the existing adapters for examples on how to use this function.\n* @public\n*\n* @param makeAdapterArgs - Function that takes the args from your framework and returns an Effect that resolves to the adapter args.\n* These args are passed to the `.middleware`, `.onUploadComplete`, and `.onUploadError` hooks.\n* @param toRequest - Function that takes the args from your framework and returns an Effect that resolves to a web Request object.\n* @param opts - The router config and other options that are normally passed to `createRequestHandler` of official adapters\n* @param beAdapter - [Optional] The adapter name of the adapter, used for telemetry purposes\n* @returns A function that takes the args from your framework and returns a promise that resolves to a Response object.\n*/\nconst makeAdapterHandler = (makeAdapterArgs, toRequest, opts, beAdapter) => {\n\tconst managed = makeRuntime(opts.config?.fetch, opts.config);\n\tconst handle = effect_Effect__WEBPACK_IMPORTED_MODULE_5__.promise(() => managed.runtime().then(_effect_platform_HttpApp__WEBPACK_IMPORTED_MODULE_20__.toWebHandlerRuntime));\n\tconst app = (...args) => effect_Effect__WEBPACK_IMPORTED_MODULE_5__.map(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.promise(() => managed.runPromise(createRequestHandler(opts, beAdapter ?? \"custom\"))), effect_Effect__WEBPACK_IMPORTED_MODULE_5__.provideServiceEffect(AdapterArguments, makeAdapterArgs(...args)));\n\treturn async (...args) => {\n\t\tconst result = await handle.pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.ap(app(...args)), effect_Effect__WEBPACK_IMPORTED_MODULE_5__.ap(toRequest(...args)), effect_Effect__WEBPACK_IMPORTED_MODULE_5__.withLogSpan(\"requestHandler\"), managed.runPromise);\n\t\treturn result;\n\t};\n};\nconst createRequestHandler = (opts, beAdapter) => effect_Effect__WEBPACK_IMPORTED_MODULE_5__.gen(function* () {\n\tconst isDevelopment = yield* IsDevelopment;\n\tconst routerConfig = yield* extractRouterConfig(opts.router);\n\tconst handleDaemon = (() => {\n\t\tif (opts.config?.handleDaemonPromise) return opts.config.handleDaemonPromise;\n\t\treturn isDevelopment ? \"void\" : \"await\";\n\t})();\n\tif (isDevelopment && handleDaemon === \"await\") return yield* new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.UploadThingError({\n\t\tcode: \"INVALID_SERVER_CONFIG\",\n\t\tmessage: \"handleDaemonPromise: \\\"await\\\" is forbidden in development.\"\n\t});\n\tconst GET = effect_Effect__WEBPACK_IMPORTED_MODULE_5__.gen(function* () {\n\t\treturn yield* _effect_platform_HttpServerResponse__WEBPACK_IMPORTED_MODULE_21__.json(routerConfig);\n\t});\n\tconst POST = effect_Effect__WEBPACK_IMPORTED_MODULE_5__.gen(function* () {\n\t\tconst { \"uploadthing-hook\": uploadthingHook, \"x-uploadthing-package\": fePackage, \"x-uploadthing-version\": clientVersion } = yield* _effect_platform_HttpServerRequest__WEBPACK_IMPORTED_MODULE_22__.schemaHeaders(effect_Schema__WEBPACK_IMPORTED_MODULE_3__.Struct({\n\t\t\t\"uploadthing-hook\": _shared_schemas_BIFDoqPF_js__WEBPACK_IMPORTED_MODULE_4__.UploadThingHook.pipe(effect_Schema__WEBPACK_IMPORTED_MODULE_3__.optional),\n\t\t\t\"x-uploadthing-package\": effect_Schema__WEBPACK_IMPORTED_MODULE_3__.String.pipe(effect_Schema__WEBPACK_IMPORTED_MODULE_3__.optionalWith({ default: () => \"unknown\" })),\n\t\t\t\"x-uploadthing-version\": effect_Schema__WEBPACK_IMPORTED_MODULE_3__.String.pipe(effect_Schema__WEBPACK_IMPORTED_MODULE_3__.optionalWith({ default: () => _package_Beb_iarE_js__WEBPACK_IMPORTED_MODULE_23__.version }))\n\t\t}));\n\t\tif (clientVersion !== _package_Beb_iarE_js__WEBPACK_IMPORTED_MODULE_23__.version) {\n\t\t\tconst serverVersion = _package_Beb_iarE_js__WEBPACK_IMPORTED_MODULE_23__.version;\n\t\t\tyield* effect_Effect__WEBPACK_IMPORTED_MODULE_5__.logWarning(\"Client version mismatch. Things may not work as expected, please sync your versions to ensure compatibility.\").pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.annotateLogs({\n\t\t\t\tclientVersion,\n\t\t\t\tserverVersion\n\t\t\t}));\n\t\t}\n\t\tconst { slug, actionType } = yield* _effect_platform_HttpRouter__WEBPACK_IMPORTED_MODULE_24__.schemaParams(effect_Schema__WEBPACK_IMPORTED_MODULE_3__.Struct({\n\t\t\tactionType: _shared_schemas_BIFDoqPF_js__WEBPACK_IMPORTED_MODULE_4__.ActionType.pipe(effect_Schema__WEBPACK_IMPORTED_MODULE_3__.optional),\n\t\t\tslug: effect_Schema__WEBPACK_IMPORTED_MODULE_3__.String\n\t\t}));\n\t\tconst uploadable = opts.router[slug];\n\t\tif (!uploadable) {\n\t\t\tconst msg = `No file route found for slug ${slug}`;\n\t\t\tyield* effect_Effect__WEBPACK_IMPORTED_MODULE_5__.logError(msg);\n\t\t\treturn yield* new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.UploadThingError({\n\t\t\t\tcode: \"NOT_FOUND\",\n\t\t\t\tmessage: msg\n\t\t\t});\n\t\t}\n\t\tconst { body, fiber } = yield* effect_Match__WEBPACK_IMPORTED_MODULE_25__.value({\n\t\t\tactionType,\n\t\t\tuploadthingHook\n\t\t}).pipe(effect_Match__WEBPACK_IMPORTED_MODULE_25__.when({\n\t\t\tactionType: \"upload\",\n\t\t\tuploadthingHook: void 0\n\t\t}, () => handleUploadAction({\n\t\t\tuploadable,\n\t\t\tfePackage,\n\t\t\tbeAdapter,\n\t\t\tslug\n\t\t})), effect_Match__WEBPACK_IMPORTED_MODULE_25__.when({\n\t\t\tactionType: void 0,\n\t\t\tuploadthingHook: \"callback\"\n\t\t}, () => handleCallbackRequest({\n\t\t\tuploadable,\n\t\t\tfePackage,\n\t\t\tbeAdapter\n\t\t})), effect_Match__WEBPACK_IMPORTED_MODULE_25__.when({\n\t\t\tactionType: void 0,\n\t\t\tuploadthingHook: \"error\"\n\t\t}, () => handleErrorRequest({ uploadable })), effect_Match__WEBPACK_IMPORTED_MODULE_25__.orElse(() => effect_Effect__WEBPACK_IMPORTED_MODULE_5__.succeed({\n\t\t\tbody: null,\n\t\t\tfiber: null\n\t\t})));\n\t\tif (fiber) {\n\t\t\tyield* effect_Effect__WEBPACK_IMPORTED_MODULE_5__.logDebug(\"Running fiber as daemon\").pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.annotateLogs(\"handleDaemon\", handleDaemon));\n\t\t\tif (handleDaemon === \"void\") {} else if (handleDaemon === \"await\") yield* fiber.await;\n\t\t\telse if (typeof handleDaemon === \"function\") handleDaemon(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.runPromise(fiber.await));\n\t\t}\n\t\tyield* effect_Effect__WEBPACK_IMPORTED_MODULE_5__.logDebug(\"Sending response\").pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.annotateLogs(\"body\", body));\n\t\treturn yield* _effect_platform_HttpServerResponse__WEBPACK_IMPORTED_MODULE_21__.json(body);\n\t}).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.catchTags({\n\t\tParseError: (e) => _effect_platform_HttpServerResponse__WEBPACK_IMPORTED_MODULE_21__.json(formatError(new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.UploadThingError({\n\t\t\tcode: \"BAD_REQUEST\",\n\t\t\tmessage: \"Invalid input\",\n\t\t\tcause: e.message\n\t\t}), opts.router), { status: 400 }),\n\t\tUploadThingError: (e) => _effect_platform_HttpServerResponse__WEBPACK_IMPORTED_MODULE_21__.json(formatError(e, opts.router), { status: (0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.getStatusCodeFromError)(e) })\n\t}));\n\tconst appendResponseHeaders = effect_Effect__WEBPACK_IMPORTED_MODULE_5__.map(_effect_platform_HttpServerResponse__WEBPACK_IMPORTED_MODULE_21__.setHeader(\"x-uploadthing-version\", _package_Beb_iarE_js__WEBPACK_IMPORTED_MODULE_23__.version));\n\treturn _effect_platform_HttpRouter__WEBPACK_IMPORTED_MODULE_24__.empty.pipe(_effect_platform_HttpRouter__WEBPACK_IMPORTED_MODULE_24__.get(\"*\", GET), _effect_platform_HttpRouter__WEBPACK_IMPORTED_MODULE_24__.post(\"*\", POST), _effect_platform_HttpRouter__WEBPACK_IMPORTED_MODULE_24__.use(appendResponseHeaders));\n}).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.withLogSpan(\"createRequestHandler\"));\nconst handleErrorRequest = (opts) => effect_Effect__WEBPACK_IMPORTED_MODULE_5__.gen(function* () {\n\tconst { uploadable } = opts;\n\tconst request = yield* _effect_platform_HttpServerRequest__WEBPACK_IMPORTED_MODULE_22__.HttpServerRequest;\n\tconst { apiKey } = yield* UTToken;\n\tconst verified = yield* (0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.verifySignature)(yield* request.text, request.headers[\"x-uploadthing-signature\"] ?? null, apiKey);\n\tyield* effect_Effect__WEBPACK_IMPORTED_MODULE_5__.logDebug(`Signature verified: ${verified}`);\n\tif (!verified) {\n\t\tyield* effect_Effect__WEBPACK_IMPORTED_MODULE_5__.logError(\"Invalid signature\");\n\t\treturn yield* new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.UploadThingError({\n\t\t\tcode: \"BAD_REQUEST\",\n\t\t\tmessage: \"Invalid signature\"\n\t\t});\n\t}\n\tconst requestInput = yield* _effect_platform_HttpServerRequest__WEBPACK_IMPORTED_MODULE_22__.schemaBodyJson(effect_Schema__WEBPACK_IMPORTED_MODULE_3__.Struct({\n\t\tfileKey: effect_Schema__WEBPACK_IMPORTED_MODULE_3__.String,\n\t\terror: effect_Schema__WEBPACK_IMPORTED_MODULE_3__.String\n\t}));\n\tyield* effect_Effect__WEBPACK_IMPORTED_MODULE_5__.logDebug(\"Handling error callback request with input:\").pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.annotateLogs(\"json\", requestInput));\n\tconst adapterArgs = yield* AdapterArguments;\n\tconst fiber = yield* effect_Effect__WEBPACK_IMPORTED_MODULE_5__.tryPromise({\n\t\ttry: async () => uploadable.onUploadError({\n\t\t\t...adapterArgs,\n\t\t\terror: new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.UploadThingError({\n\t\t\t\tcode: \"UPLOAD_FAILED\",\n\t\t\t\tmessage: `Upload failed for ${requestInput.fileKey}: ${requestInput.error}`\n\t\t\t}),\n\t\t\tfileKey: requestInput.fileKey\n\t\t}),\n\t\tcatch: (error) => new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.UploadThingError({\n\t\t\tcode: \"INTERNAL_SERVER_ERROR\",\n\t\t\tmessage: \"Failed to run onUploadError\",\n\t\t\tcause: error\n\t\t})\n\t}).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.tapError((error) => effect_Effect__WEBPACK_IMPORTED_MODULE_5__.logError(\"Failed to run onUploadError. You probably shouldn't be throwing errors here.\").pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.annotateLogs(\"error\", error)))).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.ignoreLogged, effect_Effect__WEBPACK_IMPORTED_MODULE_5__.forkDaemon);\n\treturn {\n\t\tbody: null,\n\t\tfiber\n\t};\n}).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.withLogSpan(\"handleErrorRequest\"));\nconst handleCallbackRequest = (opts) => effect_Effect__WEBPACK_IMPORTED_MODULE_5__.gen(function* () {\n\tconst { uploadable, fePackage, beAdapter } = opts;\n\tconst request = yield* _effect_platform_HttpServerRequest__WEBPACK_IMPORTED_MODULE_22__.HttpServerRequest;\n\tconst { apiKey } = yield* UTToken;\n\tconst verified = yield* (0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.verifySignature)(yield* request.text, request.headers[\"x-uploadthing-signature\"] ?? null, apiKey);\n\tyield* effect_Effect__WEBPACK_IMPORTED_MODULE_5__.logDebug(`Signature verified: ${verified}`);\n\tif (!verified) {\n\t\tyield* effect_Effect__WEBPACK_IMPORTED_MODULE_5__.logError(\"Invalid signature\");\n\t\treturn yield* new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.UploadThingError({\n\t\t\tcode: \"BAD_REQUEST\",\n\t\t\tmessage: \"Invalid signature\"\n\t\t});\n\t}\n\tconst requestInput = yield* _effect_platform_HttpServerRequest__WEBPACK_IMPORTED_MODULE_22__.schemaBodyJson(effect_Schema__WEBPACK_IMPORTED_MODULE_3__.Struct({\n\t\tstatus: effect_Schema__WEBPACK_IMPORTED_MODULE_3__.String,\n\t\tfile: _shared_schemas_BIFDoqPF_js__WEBPACK_IMPORTED_MODULE_4__.UploadedFileData$1,\n\t\torigin: effect_Schema__WEBPACK_IMPORTED_MODULE_3__.String,\n\t\tmetadata: effect_Schema__WEBPACK_IMPORTED_MODULE_3__.Record({\n\t\t\tkey: effect_Schema__WEBPACK_IMPORTED_MODULE_3__.String,\n\t\t\tvalue: effect_Schema__WEBPACK_IMPORTED_MODULE_3__.Unknown\n\t\t})\n\t}));\n\tyield* effect_Effect__WEBPACK_IMPORTED_MODULE_5__.logDebug(\"Handling callback request with input:\").pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.annotateLogs(\"json\", requestInput));\n\t/**\n\t* Run `.onUploadComplete` as a daemon to prevent the\n\t* request from UT to potentially timeout.\n\t*/\n\tconst fiber = yield* effect_Effect__WEBPACK_IMPORTED_MODULE_5__.gen(function* () {\n\t\tconst adapterArgs = yield* AdapterArguments;\n\t\tconst serverData = yield* effect_Effect__WEBPACK_IMPORTED_MODULE_5__.tryPromise({\n\t\t\ttry: async () => uploadable.onUploadComplete({\n\t\t\t\t...adapterArgs,\n\t\t\t\tfile: {\n\t\t\t\t\t...requestInput.file,\n\t\t\t\t\tget url() {\n\t\t\t\t\t\t(0,_deprecations_pLmw6Ytd_js__WEBPACK_IMPORTED_MODULE_26__.logDeprecationWarning)(\"`file.url` is deprecated and will be removed in uploadthing v9. Use `file.ufsUrl` instead.\");\n\t\t\t\t\t\treturn requestInput.file.url;\n\t\t\t\t\t},\n\t\t\t\t\tget appUrl() {\n\t\t\t\t\t\t(0,_deprecations_pLmw6Ytd_js__WEBPACK_IMPORTED_MODULE_26__.logDeprecationWarning)(\"`file.appUrl` is deprecated and will be removed in uploadthing v9. Use `file.ufsUrl` instead.\");\n\t\t\t\t\t\treturn requestInput.file.appUrl;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tmetadata: requestInput.metadata\n\t\t\t}),\n\t\t\tcatch: (error) => new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.UploadThingError({\n\t\t\t\tcode: \"INTERNAL_SERVER_ERROR\",\n\t\t\t\tmessage: \"Failed to run onUploadComplete. You probably shouldn't be throwing errors here.\",\n\t\t\t\tcause: error\n\t\t\t})\n\t\t});\n\t\tconst payload = {\n\t\t\tfileKey: requestInput.file.key,\n\t\t\tcallbackData: serverData ?? null\n\t\t};\n\t\tyield* effect_Effect__WEBPACK_IMPORTED_MODULE_5__.logDebug(\"'onUploadComplete' callback finished. Sending response to UploadThing:\").pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.annotateLogs(\"callbackData\", payload));\n\t\tconst httpClient = (yield* _effect_platform_HttpClient__WEBPACK_IMPORTED_MODULE_27__.HttpClient).pipe(_effect_platform_HttpClient__WEBPACK_IMPORTED_MODULE_27__.filterStatusOk);\n\t\tyield* _effect_platform_HttpClientRequest__WEBPACK_IMPORTED_MODULE_28__.post(`/callback-result`).pipe(_effect_platform_HttpClientRequest__WEBPACK_IMPORTED_MODULE_28__.prependUrl(requestInput.origin), _effect_platform_HttpClientRequest__WEBPACK_IMPORTED_MODULE_28__.setHeaders({\n\t\t\t\"x-uploadthing-api-key\": effect_Redacted__WEBPACK_IMPORTED_MODULE_29__.value(apiKey),\n\t\t\t\"x-uploadthing-version\": _package_Beb_iarE_js__WEBPACK_IMPORTED_MODULE_23__.version,\n\t\t\t\"x-uploadthing-be-adapter\": beAdapter,\n\t\t\t\"x-uploadthing-fe-package\": fePackage\n\t\t}), _effect_platform_HttpClientRequest__WEBPACK_IMPORTED_MODULE_28__.bodyJson(payload), effect_Effect__WEBPACK_IMPORTED_MODULE_5__.flatMap(httpClient.execute), effect_Effect__WEBPACK_IMPORTED_MODULE_5__.tapError(logHttpClientError(\"Failed to register callback result\")), effect_Effect__WEBPACK_IMPORTED_MODULE_5__.flatMap(_effect_platform_HttpClientResponse__WEBPACK_IMPORTED_MODULE_30__.schemaBodyJson(_shared_schemas_BIFDoqPF_js__WEBPACK_IMPORTED_MODULE_4__.CallbackResultResponse)), effect_Effect__WEBPACK_IMPORTED_MODULE_5__.tap(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.log(\"Sent callback result to UploadThing\")), effect_Effect__WEBPACK_IMPORTED_MODULE_5__.scoped);\n\t}).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.ignoreLogged, effect_Effect__WEBPACK_IMPORTED_MODULE_5__.forkDaemon);\n\treturn {\n\t\tbody: null,\n\t\tfiber\n\t};\n}).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.withLogSpan(\"handleCallbackRequest\"));\nconst runRouteMiddleware = (opts) => effect_Effect__WEBPACK_IMPORTED_MODULE_5__.gen(function* () {\n\tconst { json: { files, input }, uploadable } = opts;\n\tyield* effect_Effect__WEBPACK_IMPORTED_MODULE_5__.logDebug(\"Running middleware\");\n\tconst adapterArgs = yield* AdapterArguments;\n\tconst metadata = yield* effect_Effect__WEBPACK_IMPORTED_MODULE_5__.tryPromise({\n\t\ttry: async () => uploadable.middleware({\n\t\t\t...adapterArgs,\n\t\t\tinput,\n\t\t\tfiles\n\t\t}),\n\t\tcatch: (error) => error instanceof _uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.UploadThingError ? error : new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.UploadThingError({\n\t\t\tcode: \"INTERNAL_SERVER_ERROR\",\n\t\t\tmessage: \"Failed to run middleware\",\n\t\t\tcause: error\n\t\t})\n\t});\n\tif (metadata[UTFiles] && metadata[UTFiles].length !== files.length) {\n\t\tconst msg = `Expected files override to have the same length as original files, got ${metadata[UTFiles].length} but expected ${files.length}`;\n\t\tyield* effect_Effect__WEBPACK_IMPORTED_MODULE_5__.logError(msg);\n\t\treturn yield* new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.UploadThingError({\n\t\t\tcode: \"BAD_REQUEST\",\n\t\t\tmessage: \"Files override must have the same length as files\",\n\t\t\tcause: msg\n\t\t});\n\t}\n\tconst filesWithCustomIds = yield* effect_Effect__WEBPACK_IMPORTED_MODULE_5__.forEach(files, (file, idx) => effect_Effect__WEBPACK_IMPORTED_MODULE_5__.gen(function* () {\n\t\tconst theirs = metadata[UTFiles]?.[idx];\n\t\tif (theirs && theirs.size !== file.size) yield* effect_Effect__WEBPACK_IMPORTED_MODULE_5__.logWarning(\"File size mismatch. Reverting to original size\");\n\t\treturn {\n\t\t\tname: theirs?.name ?? file.name,\n\t\t\tsize: file.size,\n\t\t\ttype: file.type,\n\t\t\tcustomId: theirs?.customId,\n\t\t\tlastModified: theirs?.lastModified ?? Date.now()\n\t\t};\n\t}));\n\treturn {\n\t\tmetadata,\n\t\tfilesWithCustomIds,\n\t\tpreferredRegion: metadata[UTRegion]\n\t};\n}).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.withLogSpan(\"runRouteMiddleware\"));\nconst handleUploadAction = (opts) => effect_Effect__WEBPACK_IMPORTED_MODULE_5__.gen(function* () {\n\tconst httpClient = (yield* _effect_platform_HttpClient__WEBPACK_IMPORTED_MODULE_27__.HttpClient).pipe(_effect_platform_HttpClient__WEBPACK_IMPORTED_MODULE_27__.filterStatusOk);\n\tconst { uploadable, fePackage, beAdapter, slug } = opts;\n\tconst json = yield* _effect_platform_HttpServerRequest__WEBPACK_IMPORTED_MODULE_22__.schemaBodyJson(_shared_schemas_BIFDoqPF_js__WEBPACK_IMPORTED_MODULE_4__.UploadActionPayload);\n\tyield* effect_Effect__WEBPACK_IMPORTED_MODULE_5__.logDebug(\"Handling upload request\").pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.annotateLogs(\"json\", json));\n\tyield* effect_Effect__WEBPACK_IMPORTED_MODULE_5__.logDebug(\"Parsing user input\");\n\tconst parsedInput = yield* effect_Effect__WEBPACK_IMPORTED_MODULE_5__.tryPromise({\n\t\ttry: () => getParseFn(uploadable.inputParser)(json.input),\n\t\tcatch: (error) => new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.UploadThingError({\n\t\t\tcode: \"BAD_REQUEST\",\n\t\t\tmessage: \"Invalid input\",\n\t\t\tcause: error\n\t\t})\n\t});\n\tyield* effect_Effect__WEBPACK_IMPORTED_MODULE_5__.logDebug(\"Input parsed successfully\").pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.annotateLogs(\"input\", parsedInput));\n\tconst { metadata, filesWithCustomIds, preferredRegion } = yield* runRouteMiddleware({\n\t\tjson: {\n\t\t\tinput: parsedInput,\n\t\t\tfiles: json.files\n\t\t},\n\t\tuploadable\n\t});\n\tyield* effect_Effect__WEBPACK_IMPORTED_MODULE_5__.logDebug(\"Parsing route config\").pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.annotateLogs(\"routerConfig\", uploadable.routerConfig));\n\tconst parsedConfig = yield* (0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.fillInputRouteConfig)(uploadable.routerConfig).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.catchTag(\"InvalidRouteConfig\", (err) => new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.UploadThingError({\n\t\tcode: \"BAD_REQUEST\",\n\t\tmessage: \"Invalid route config\",\n\t\tcause: err\n\t})));\n\tyield* effect_Effect__WEBPACK_IMPORTED_MODULE_5__.logDebug(\"Route config parsed successfully\").pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.annotateLogs(\"routeConfig\", parsedConfig));\n\tyield* effect_Effect__WEBPACK_IMPORTED_MODULE_5__.logDebug(\"Validating files meet the config requirements\").pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.annotateLogs(\"files\", json.files));\n\tyield* assertFilesMeetConfig(json.files, parsedConfig).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.mapError((e) => new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.UploadThingError({\n\t\tcode: \"BAD_REQUEST\",\n\t\tmessage: `Invalid config: ${e._tag}`,\n\t\tcause: \"reason\" in e ? e.reason : e.message\n\t})));\n\tyield* effect_Effect__WEBPACK_IMPORTED_MODULE_5__.logDebug(\"Files validated.\");\n\tconst fileUploadRequests = yield* effect_Effect__WEBPACK_IMPORTED_MODULE_5__.forEach(filesWithCustomIds, (file) => effect_Effect__WEBPACK_IMPORTED_MODULE_5__.map((0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.matchFileType)(file, (0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.objectKeys)(parsedConfig)), (type) => ({\n\t\tname: file.name,\n\t\tsize: file.size,\n\t\ttype: file.type || type,\n\t\tlastModified: file.lastModified,\n\t\tcustomId: file.customId,\n\t\tcontentDisposition: parsedConfig[type]?.contentDisposition ?? \"inline\",\n\t\tacl: parsedConfig[type]?.acl\n\t}))).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.catchTags({\n\t\tInvalidFileType: (e) => effect_Effect__WEBPACK_IMPORTED_MODULE_5__.die(e),\n\t\tUnknownFileType: (e) => effect_Effect__WEBPACK_IMPORTED_MODULE_5__.die(e)\n\t}));\n\tconst routeOptions = uploadable.routeOptions;\n\tconst { apiKey, appId } = yield* UTToken;\n\tconst ingestUrl = yield* IngestUrl(preferredRegion);\n\tconst isDev = yield* IsDevelopment;\n\tyield* effect_Effect__WEBPACK_IMPORTED_MODULE_5__.logDebug(\"Generating presigned URLs\").pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.annotateLogs(\"fileUploadRequests\", fileUploadRequests), effect_Effect__WEBPACK_IMPORTED_MODULE_5__.annotateLogs(\"ingestUrl\", ingestUrl));\n\tconst presignedUrls = yield* effect_Effect__WEBPACK_IMPORTED_MODULE_5__.forEach(fileUploadRequests, (file) => effect_Effect__WEBPACK_IMPORTED_MODULE_5__.gen(function* () {\n\t\tconst key = yield* (0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.generateKey)(file, appId, routeOptions.getFileHashParts);\n\t\tconst url = yield* (0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_1__.generateSignedURL)(`${ingestUrl}/${key}`, apiKey, {\n\t\t\tttlInSeconds: routeOptions.presignedURLTTL,\n\t\t\tdata: {\n\t\t\t\t\"x-ut-identifier\": appId,\n\t\t\t\t\"x-ut-file-name\": file.name,\n\t\t\t\t\"x-ut-file-size\": file.size,\n\t\t\t\t\"x-ut-file-type\": file.type,\n\t\t\t\t\"x-ut-slug\": slug,\n\t\t\t\t\"x-ut-custom-id\": file.customId,\n\t\t\t\t\"x-ut-content-disposition\": file.contentDisposition,\n\t\t\t\t\"x-ut-acl\": file.acl\n\t\t\t}\n\t\t});\n\t\treturn {\n\t\t\turl,\n\t\t\tkey\n\t\t};\n\t}), { concurrency: \"unbounded\" });\n\tconst serverReq = yield* _effect_platform_HttpServerRequest__WEBPACK_IMPORTED_MODULE_22__.HttpServerRequest;\n\tconst requestUrl = yield* _effect_platform_HttpServerRequest__WEBPACK_IMPORTED_MODULE_22__.toURL(serverReq);\n\tconst devHookRequest = yield* effect_Config__WEBPACK_IMPORTED_MODULE_2__.string(\"callbackUrl\").pipe(effect_Config__WEBPACK_IMPORTED_MODULE_2__.withDefault(requestUrl.origin + requestUrl.pathname), effect_Effect__WEBPACK_IMPORTED_MODULE_5__.map((url) => _effect_platform_HttpClientRequest__WEBPACK_IMPORTED_MODULE_28__.post(url).pipe(_effect_platform_HttpClientRequest__WEBPACK_IMPORTED_MODULE_28__.appendUrlParam(\"slug\", slug))));\n\tconst metadataRequest = _effect_platform_HttpClientRequest__WEBPACK_IMPORTED_MODULE_28__.post(\"/route-metadata\").pipe(_effect_platform_HttpClientRequest__WEBPACK_IMPORTED_MODULE_28__.prependUrl(ingestUrl), _effect_platform_HttpClientRequest__WEBPACK_IMPORTED_MODULE_28__.setHeaders({\n\t\t\"x-uploadthing-api-key\": effect_Redacted__WEBPACK_IMPORTED_MODULE_29__.value(apiKey),\n\t\t\"x-uploadthing-version\": _package_Beb_iarE_js__WEBPACK_IMPORTED_MODULE_23__.version,\n\t\t\"x-uploadthing-be-adapter\": beAdapter,\n\t\t\"x-uploadthing-fe-package\": fePackage\n\t}), _effect_platform_HttpClientRequest__WEBPACK_IMPORTED_MODULE_28__.bodyJson({\n\t\tfileKeys: presignedUrls.map(({ key }) => key),\n\t\tmetadata,\n\t\tisDev,\n\t\tcallbackUrl: devHookRequest.url,\n\t\tcallbackSlug: slug,\n\t\tawaitServerData: routeOptions.awaitServerData ?? true\n\t}), effect_Effect__WEBPACK_IMPORTED_MODULE_5__.flatMap(httpClient.execute));\n\tconst handleDevStreamError = effect_Effect__WEBPACK_IMPORTED_MODULE_5__.fn(\"handleDevStreamError\")(function* (err, chunk) {\n\t\tconst schema = effect_Schema__WEBPACK_IMPORTED_MODULE_3__.parseJson(effect_Schema__WEBPACK_IMPORTED_MODULE_3__.Struct({ file: _shared_schemas_BIFDoqPF_js__WEBPACK_IMPORTED_MODULE_4__.UploadedFileData$1 }));\n\t\tconst parsedChunk = yield* effect_Schema__WEBPACK_IMPORTED_MODULE_3__.decodeUnknown(schema)(chunk);\n\t\tconst key = parsedChunk.file.key;\n\t\tyield* effect_Effect__WEBPACK_IMPORTED_MODULE_5__.logError(\"Failed to forward callback request from dev stream\").pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.annotateLogs({\n\t\t\tfileKey: key,\n\t\t\terror: err.message\n\t\t}));\n\t\tconst httpResponse = yield* _effect_platform_HttpClientRequest__WEBPACK_IMPORTED_MODULE_28__.post(\"/callback-result\").pipe(_effect_platform_HttpClientRequest__WEBPACK_IMPORTED_MODULE_28__.prependUrl(ingestUrl), _effect_platform_HttpClientRequest__WEBPACK_IMPORTED_MODULE_28__.setHeaders({\n\t\t\t\"x-uploadthing-api-key\": effect_Redacted__WEBPACK_IMPORTED_MODULE_29__.value(apiKey),\n\t\t\t\"x-uploadthing-version\": _package_Beb_iarE_js__WEBPACK_IMPORTED_MODULE_23__.version,\n\t\t\t\"x-uploadthing-be-adapter\": beAdapter,\n\t\t\t\"x-uploadthing-fe-package\": fePackage\n\t\t}), _effect_platform_HttpClientRequest__WEBPACK_IMPORTED_MODULE_28__.bodyJson({\n\t\t\tfileKey: key,\n\t\t\terror: `Failed to forward callback request from dev stream: ${err.message}`\n\t\t}), effect_Effect__WEBPACK_IMPORTED_MODULE_5__.flatMap(httpClient.execute));\n\t\tyield* logHttpClientResponse(\"Reported callback error to UploadThing\")(httpResponse);\n\t});\n\tconst fiber = yield* effect_Effect__WEBPACK_IMPORTED_MODULE_5__[\"if\"](isDev, {\n\t\tonTrue: () => metadataRequest.pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.tapBoth({\n\t\t\tonSuccess: logHttpClientResponse(\"Registered metadata\", { mixin: \"None\" }),\n\t\t\tonFailure: logHttpClientError(\"Failed to register metadata\")\n\t\t}), _effect_platform_HttpClientResponse__WEBPACK_IMPORTED_MODULE_31__.stream, handleJsonLineStream(_shared_schemas_BIFDoqPF_js__WEBPACK_IMPORTED_MODULE_4__.MetadataFetchStreamPart, (chunk) => devHookRequest.pipe(_effect_platform_HttpClientRequest__WEBPACK_IMPORTED_MODULE_28__.setHeaders({\n\t\t\t\"uploadthing-hook\": chunk.hook,\n\t\t\t\"x-uploadthing-signature\": chunk.signature\n\t\t}), _effect_platform_HttpClientRequest__WEBPACK_IMPORTED_MODULE_28__.setBody(_effect_platform_HttpBody__WEBPACK_IMPORTED_MODULE_32__.text(chunk.payload, \"application/json\")), httpClient.execute, effect_Effect__WEBPACK_IMPORTED_MODULE_5__.tap(logHttpClientResponse(\"Successfully forwarded callback request from dev stream\")), effect_Effect__WEBPACK_IMPORTED_MODULE_5__.catchTag(\"ResponseError\", (err) => handleDevStreamError(err, chunk.payload)), effect_Effect__WEBPACK_IMPORTED_MODULE_5__.annotateLogs(chunk), effect_Effect__WEBPACK_IMPORTED_MODULE_5__.asVoid, effect_Effect__WEBPACK_IMPORTED_MODULE_5__.ignoreLogged, effect_Effect__WEBPACK_IMPORTED_MODULE_5__.scoped))),\n\t\tonFalse: () => metadataRequest.pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.tapBoth({\n\t\t\tonSuccess: logHttpClientResponse(\"Registered metadata\"),\n\t\t\tonFailure: logHttpClientError(\"Failed to register metadata\")\n\t\t}), effect_Effect__WEBPACK_IMPORTED_MODULE_5__.flatMap(_effect_platform_HttpClientResponse__WEBPACK_IMPORTED_MODULE_30__.schemaBodyJson(_shared_schemas_BIFDoqPF_js__WEBPACK_IMPORTED_MODULE_4__.MetadataFetchResponse)), effect_Effect__WEBPACK_IMPORTED_MODULE_5__.scoped)\n\t}).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.forkDaemon);\n\tconst presigneds = presignedUrls.map((p, i) => ({\n\t\turl: p.url,\n\t\tkey: p.key,\n\t\tname: fileUploadRequests[i].name,\n\t\tcustomId: fileUploadRequests[i].customId ?? null\n\t}));\n\tyield* effect_Effect__WEBPACK_IMPORTED_MODULE_5__.logInfo(\"Sending presigned URLs to client\").pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.annotateLogs(\"presignedUrls\", presigneds));\n\treturn {\n\t\tbody: presigneds,\n\t\tfiber\n\t};\n}).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_5__.withLogSpan(\"handleUploadAction\"));\n\n//#endregion\n//#region src/_internal/upload-builder.ts\nfunction internalCreateBuilder(initDef = {}) {\n\tconst _def = {\n\t\t$types: {},\n\t\trouterConfig: { image: { maxFileSize: \"4MB\" } },\n\t\trouteOptions: { awaitServerData: true },\n\t\tinputParser: {\n\t\t\tparseAsync: () => Promise.resolve(void 0),\n\t\t\t_input: void 0,\n\t\t\t_output: void 0\n\t\t},\n\t\tmiddleware: () => ({}),\n\t\tonUploadError: () => {},\n\t\tonUploadComplete: () => void 0,\n\t\terrorFormatter: initDef.errorFormatter ?? defaultErrorFormatter,\n\t\t...initDef\n\t};\n\treturn {\n\t\tinput(userParser) {\n\t\t\treturn internalCreateBuilder({\n\t\t\t\t..._def,\n\t\t\t\tinputParser: userParser\n\t\t\t});\n\t\t},\n\t\tmiddleware(userMiddleware) {\n\t\t\treturn internalCreateBuilder({\n\t\t\t\t..._def,\n\t\t\t\tmiddleware: userMiddleware\n\t\t\t});\n\t\t},\n\t\tonUploadComplete(userUploadComplete) {\n\t\t\treturn {\n\t\t\t\t..._def,\n\t\t\t\tonUploadComplete: userUploadComplete\n\t\t\t};\n\t\t},\n\t\tonUploadError(userOnUploadError) {\n\t\t\treturn internalCreateBuilder({\n\t\t\t\t..._def,\n\t\t\t\tonUploadError: userOnUploadError\n\t\t\t});\n\t\t}\n\t};\n}\n/**\n* Create a builder for your backend adapter.\n* Refer to the existing adapters for examples on how to use this function.\n* @public\n*\n* @param opts - Options for the builder\n* @returns A file route builder for making UploadThing file routes\n*/\nfunction createBuilder(opts) {\n\treturn (input, config) => {\n\t\treturn internalCreateBuilder({\n\t\t\trouterConfig: input,\n\t\t\trouteOptions: config ?? {},\n\t\t\t...opts\n\t\t});\n\t};\n}\n\n//#endregion\n\n//# sourceMappingURL=upload-builder-e0_p9NOT.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/uploadthing/dist/upload-builder-e0_p9NOT.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/uploadthing/next/index.js":
/*!************************************************!*\
  !*** ./node_modules/uploadthing/next/index.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UTFiles: () => (/* reexport safe */ _dist_upload_builder_e0_p9NOT_js__WEBPACK_IMPORTED_MODULE_0__.UTFiles$1),\n/* harmony export */   createRouteHandler: () => (/* binding */ createRouteHandler),\n/* harmony export */   createUploadthing: () => (/* binding */ createUploadthing),\n/* harmony export */   experimental_UTRegion: () => (/* reexport safe */ _dist_upload_builder_e0_p9NOT_js__WEBPACK_IMPORTED_MODULE_0__.UTRegion$1)\n/* harmony export */ });\n/* harmony import */ var _dist_upload_builder_e0_p9NOT_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dist/upload-builder-e0_p9NOT.js */ \"(rsc)/./node_modules/uploadthing/dist/upload-builder-e0_p9NOT.js\");\n/* harmony import */ var effect_Effect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! effect/Effect */ \"(rsc)/./node_modules/effect/dist/esm/Effect.js\");\n\n\n\n\n\n\n//#region src/next.ts\nconst createUploadthing = (opts) => (0,_dist_upload_builder_e0_p9NOT_js__WEBPACK_IMPORTED_MODULE_0__.createBuilder)(opts);\nconst createRouteHandler = (opts) => {\n\tconst handler = (0,_dist_upload_builder_e0_p9NOT_js__WEBPACK_IMPORTED_MODULE_0__.makeAdapterHandler)((req) => effect_Effect__WEBPACK_IMPORTED_MODULE_1__.succeed({ req }), (req) => effect_Effect__WEBPACK_IMPORTED_MODULE_1__.succeed(req), opts, \"nextjs-app\");\n\treturn {\n\t\tPOST: handler,\n\t\tGET: handler\n\t};\n};\n\n//#endregion\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdXBsb2FkdGhpbmcvbmV4dC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBcUM7QUFDSztBQUNFO0FBQ3lGO0FBQzdGOztBQUV4QztBQUNBLG9DQUFvQywrRUFBYTtBQUNqRDtBQUNBLGlCQUFpQixvRkFBa0IsVUFBVSxrREFBYyxHQUFHLEtBQUssWUFBWSxrREFBYztBQUM3RjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQzZGO0FBQzdGIiwic291cmNlcyI6WyIvVXNlcnMvdXNhbWEvRG9jdW1lbnRzL0dpdEh1Yi9haV9zZWxmaWUvbm9kZV9tb2R1bGVzL3VwbG9hZHRoaW5nL25leHQvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwiLi4vZGlzdC9wYWNrYWdlLUJlYi1pYXJFLmpzXCI7XG5pbXBvcnQgXCIuLi9kaXN0L2RlcHJlY2F0aW9ucy1wTG13Nll0ZC5qc1wiO1xuaW1wb3J0IFwiLi4vZGlzdC9zaGFyZWQtc2NoZW1hcy1CSUZEb3FQRi5qc1wiO1xuaW1wb3J0IHsgVVRGaWxlcyQxIGFzIFVURmlsZXMsIFVUUmVnaW9uJDEgYXMgVVRSZWdpb24sIGNyZWF0ZUJ1aWxkZXIsIG1ha2VBZGFwdGVySGFuZGxlciB9IGZyb20gXCIuLi9kaXN0L3VwbG9hZC1idWlsZGVyLWUwX3A5Tk9ULmpzXCI7XG5pbXBvcnQgKiBhcyBFZmZlY3QgZnJvbSBcImVmZmVjdC9FZmZlY3RcIjtcblxuLy8jcmVnaW9uIHNyYy9uZXh0LnRzXG5jb25zdCBjcmVhdGVVcGxvYWR0aGluZyA9IChvcHRzKSA9PiBjcmVhdGVCdWlsZGVyKG9wdHMpO1xuY29uc3QgY3JlYXRlUm91dGVIYW5kbGVyID0gKG9wdHMpID0+IHtcblx0Y29uc3QgaGFuZGxlciA9IG1ha2VBZGFwdGVySGFuZGxlcigocmVxKSA9PiBFZmZlY3Quc3VjY2VlZCh7IHJlcSB9KSwgKHJlcSkgPT4gRWZmZWN0LnN1Y2NlZWQocmVxKSwgb3B0cywgXCJuZXh0anMtYXBwXCIpO1xuXHRyZXR1cm4ge1xuXHRcdFBPU1Q6IGhhbmRsZXIsXG5cdFx0R0VUOiBoYW5kbGVyXG5cdH07XG59O1xuXG4vLyNlbmRyZWdpb25cbmV4cG9ydCB7IFVURmlsZXMsIGNyZWF0ZVJvdXRlSGFuZGxlciwgY3JlYXRlVXBsb2FkdGhpbmcsIFVUUmVnaW9uIGFzIGV4cGVyaW1lbnRhbF9VVFJlZ2lvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/uploadthing/next/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/uploadthing/server/index.js":
/*!**************************************************!*\
  !*** ./node_modules/uploadthing/server/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UTApi: () => (/* binding */ UTApi),\n/* harmony export */   UTFile: () => (/* binding */ UTFile),\n/* harmony export */   UTFiles: () => (/* reexport safe */ _dist_upload_builder_e0_p9NOT_js__WEBPACK_IMPORTED_MODULE_5__.UTFiles$1),\n/* harmony export */   UploadThingError: () => (/* reexport safe */ _uploadthing_shared__WEBPACK_IMPORTED_MODULE_6__.UploadThingError),\n/* harmony export */   createBuilder: () => (/* reexport safe */ _dist_upload_builder_e0_p9NOT_js__WEBPACK_IMPORTED_MODULE_5__.createBuilder),\n/* harmony export */   createRouteHandler: () => (/* binding */ createRouteHandler),\n/* harmony export */   createUploadthing: () => (/* binding */ createUploadthing),\n/* harmony export */   experimental_UTRegion: () => (/* reexport safe */ _dist_upload_builder_e0_p9NOT_js__WEBPACK_IMPORTED_MODULE_5__.UTRegion$1),\n/* harmony export */   extractRouterConfig: () => (/* binding */ extractRouterConfig$1),\n/* harmony export */   makeAdapterHandler: () => (/* reexport safe */ _dist_upload_builder_e0_p9NOT_js__WEBPACK_IMPORTED_MODULE_5__.makeAdapterHandler)\n/* harmony export */ });\n/* harmony import */ var _dist_package_Beb_iarE_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../dist/package-Beb-iarE.js */ \"(rsc)/./node_modules/uploadthing/dist/package-Beb-iarE.js\");\n/* harmony import */ var _dist_deprecations_pLmw6Ytd_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../dist/deprecations-pLmw6Ytd.js */ \"(rsc)/./node_modules/uploadthing/dist/deprecations-pLmw6Ytd.js\");\n/* harmony import */ var _dist_upload_builder_e0_p9NOT_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../dist/upload-builder-e0_p9NOT.js */ \"(rsc)/./node_modules/uploadthing/dist/upload-builder-e0_p9NOT.js\");\n/* harmony import */ var effect_Array__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! effect/Array */ \"(rsc)/./node_modules/effect/dist/esm/Array.js\");\n/* harmony import */ var _uploadthing_shared__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @uploadthing/shared */ \"(rsc)/./node_modules/@uploadthing/shared/dist/index.js\");\n/* harmony import */ var effect_Function__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! effect/Function */ \"(rsc)/./node_modules/effect/dist/esm/Function.js\");\n/* harmony import */ var effect_Predicate__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! effect/Predicate */ \"(rsc)/./node_modules/effect/dist/esm/Predicate.js\");\n/* harmony import */ var effect_Effect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! effect/Effect */ \"(rsc)/./node_modules/effect/dist/esm/Effect.js\");\n/* harmony import */ var _effect_platform_HttpClient__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @effect/platform/HttpClient */ \"(rsc)/./node_modules/@effect/platform/dist/esm/HttpClient.js\");\n/* harmony import */ var _effect_platform_HttpClientRequest__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @effect/platform/HttpClientRequest */ \"(rsc)/./node_modules/@effect/platform/dist/esm/HttpClientRequest.js\");\n/* harmony import */ var _effect_platform_HttpClientResponse__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @effect/platform/HttpClientResponse */ \"(rsc)/./node_modules/@effect/platform/dist/esm/HttpIncomingMessage.js\");\n/* harmony import */ var effect_Redacted__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! effect/Redacted */ \"(rsc)/./node_modules/effect/dist/esm/Redacted.js\");\n/* harmony import */ var effect_Schema__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! effect/Schema */ \"(rsc)/./node_modules/effect/dist/esm/Schema.js\");\n/* harmony import */ var effect_Cause__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! effect/Cause */ \"(rsc)/./node_modules/effect/dist/esm/Cause.js\");\n/* harmony import */ var _uploadthing_mime_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @uploadthing/mime-types */ \"(rsc)/./node_modules/@uploadthing/mime-types/dist/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//#region src/sdk/ut-file.ts\n/**\n* Extension of the Blob class that simplifies setting the `name` and `customId` properties,\n* similar to the built-in File class from Node > 20.\n*/\nvar UTFile = class extends Blob {\n\tname;\n\tlastModified;\n\tcustomId;\n\tconstructor(parts, name, options) {\n\t\tconst optionsWithDefaults = {\n\t\t\t...options,\n\t\t\ttype: options?.type ?? ((0,_uploadthing_mime_types__WEBPACK_IMPORTED_MODULE_0__.lookup)(name) || \"application/octet-stream\"),\n\t\t\tlastModified: options?.lastModified ?? Date.now()\n\t\t};\n\t\tsuper(parts, optionsWithDefaults);\n\t\tthis.name = name;\n\t\tthis.customId = optionsWithDefaults.customId;\n\t\tthis.lastModified = optionsWithDefaults.lastModified;\n\t}\n};\n\n//#endregion\n//#region src/_internal/upload-server.ts\nconst uploadWithoutProgress = (file, presigned) => effect_Effect__WEBPACK_IMPORTED_MODULE_1__.gen(function* () {\n\tconst formData = new FormData();\n\tformData.append(\"file\", file);\n\tconst httpClient = (yield* _effect_platform_HttpClient__WEBPACK_IMPORTED_MODULE_2__.HttpClient).pipe(_effect_platform_HttpClient__WEBPACK_IMPORTED_MODULE_2__.filterStatusOk);\n\tconst json = yield* _effect_platform_HttpClientRequest__WEBPACK_IMPORTED_MODULE_3__.put(presigned.url).pipe(_effect_platform_HttpClientRequest__WEBPACK_IMPORTED_MODULE_3__.bodyFormData(formData), _effect_platform_HttpClientRequest__WEBPACK_IMPORTED_MODULE_3__.setHeader(\"Range\", \"bytes=0-\"), _effect_platform_HttpClientRequest__WEBPACK_IMPORTED_MODULE_3__.setHeader(\"x-uploadthing-version\", _dist_package_Beb_iarE_js__WEBPACK_IMPORTED_MODULE_4__.version), httpClient.execute, effect_Effect__WEBPACK_IMPORTED_MODULE_1__.tapError((0,_dist_upload_builder_e0_p9NOT_js__WEBPACK_IMPORTED_MODULE_5__.logHttpClientError)(\"Failed to upload file\")), effect_Effect__WEBPACK_IMPORTED_MODULE_1__.mapError((e) => new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_6__.UploadThingError({\n\t\tcode: \"UPLOAD_FAILED\",\n\t\tmessage: \"Failed to upload file\",\n\t\tcause: e\n\t})), effect_Effect__WEBPACK_IMPORTED_MODULE_1__.andThen((_) => _.json), effect_Effect__WEBPACK_IMPORTED_MODULE_1__.andThen(effect_Function__WEBPACK_IMPORTED_MODULE_7__.unsafeCoerce), effect_Effect__WEBPACK_IMPORTED_MODULE_1__.scoped);\n\tyield* effect_Effect__WEBPACK_IMPORTED_MODULE_1__.logDebug(`File ${file.name} uploaded successfully`).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_1__.annotateLogs(\"json\", json));\n\treturn {\n\t\t...json,\n\t\tget url() {\n\t\t\t(0,_dist_deprecations_pLmw6Ytd_js__WEBPACK_IMPORTED_MODULE_8__.logDeprecationWarning)(\"`file.url` is deprecated and will be removed in uploadthing v9. Use `file.ufsUrl` instead.\");\n\t\t\treturn json.url;\n\t\t},\n\t\tget appUrl() {\n\t\t\t(0,_dist_deprecations_pLmw6Ytd_js__WEBPACK_IMPORTED_MODULE_8__.logDeprecationWarning)(\"`file.appUrl` is deprecated and will be removed in uploadthing v9. Use `file.ufsUrl` instead.\");\n\t\t\treturn json.appUrl;\n\t\t}\n\t};\n});\n\n//#endregion\n//#region src/sdk/utils.ts\nfunction guardServerOnly() {\n\tif (typeof window !== \"undefined\") throw new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_6__.UploadThingError({\n\t\tcode: \"INTERNAL_SERVER_ERROR\",\n\t\tmessage: \"The `utapi` can only be used on the server.\"\n\t});\n}\nconst downloadFile = (_url) => effect_Effect__WEBPACK_IMPORTED_MODULE_1__.gen(function* () {\n\tlet url = effect_Predicate__WEBPACK_IMPORTED_MODULE_9__.isRecord(_url) ? _url.url : _url;\n\tif (typeof url === \"string\") {\n\t\tif (url.startsWith(\"data:\")) return yield* effect_Effect__WEBPACK_IMPORTED_MODULE_1__.fail({\n\t\t\tcode: \"BAD_REQUEST\",\n\t\t\tmessage: \"Please use uploadFiles() for data URLs. uploadFilesFromUrl() is intended for use with remote URLs only.\",\n\t\t\tdata: void 0\n\t\t});\n\t}\n\turl = new URL(url);\n\tconst { name = url.pathname.split(\"/\").pop() ?? \"unknown-filename\", customId = void 0 } = effect_Predicate__WEBPACK_IMPORTED_MODULE_9__.isRecord(_url) ? _url : {};\n\tconst httpClient = (yield* _effect_platform_HttpClient__WEBPACK_IMPORTED_MODULE_2__.HttpClient).pipe(_effect_platform_HttpClient__WEBPACK_IMPORTED_MODULE_2__.filterStatusOk);\n\tconst arrayBuffer = yield* _effect_platform_HttpClientRequest__WEBPACK_IMPORTED_MODULE_3__.get(url).pipe(_effect_platform_HttpClientRequest__WEBPACK_IMPORTED_MODULE_3__.modify({ headers: {} }), httpClient.execute, effect_Effect__WEBPACK_IMPORTED_MODULE_1__.flatMap((_) => _.arrayBuffer), effect_Effect__WEBPACK_IMPORTED_MODULE_1__.mapError((cause) => {\n\t\treturn {\n\t\t\tcode: \"BAD_REQUEST\",\n\t\t\tmessage: `Failed to download requested file: ${cause.message}`,\n\t\t\tdata: cause.toJSON()\n\t\t};\n\t}), effect_Effect__WEBPACK_IMPORTED_MODULE_1__.scoped);\n\treturn new UTFile([arrayBuffer], name, {\n\t\tcustomId,\n\t\tlastModified: Date.now()\n\t});\n}).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_1__.withLogSpan(\"downloadFile\"));\nconst generatePresignedUrl = (file, cd, acl) => effect_Effect__WEBPACK_IMPORTED_MODULE_1__.gen(function* () {\n\tconst { apiKey, appId } = yield* _dist_upload_builder_e0_p9NOT_js__WEBPACK_IMPORTED_MODULE_5__.UTToken;\n\tconst baseUrl = yield* (0,_dist_upload_builder_e0_p9NOT_js__WEBPACK_IMPORTED_MODULE_5__.IngestUrl)(void 0);\n\tconst key = yield* (0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_6__.generateKey)(file, appId);\n\tconst url = yield* (0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_6__.generateSignedURL)(`${baseUrl}/${key}`, apiKey, { data: {\n\t\t\"x-ut-identifier\": appId,\n\t\t\"x-ut-file-name\": file.name,\n\t\t\"x-ut-file-size\": file.size,\n\t\t\"x-ut-file-type\": file.type,\n\t\t\"x-ut-custom-id\": file.customId,\n\t\t\"x-ut-content-disposition\": cd,\n\t\t\"x-ut-acl\": acl\n\t} });\n\treturn {\n\t\turl,\n\t\tkey\n\t};\n}).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_1__.withLogSpan(\"generatePresignedUrl\"));\nconst uploadFile = (file, opts) => effect_Effect__WEBPACK_IMPORTED_MODULE_1__.gen(function* () {\n\tconst presigned = yield* generatePresignedUrl(file, opts.contentDisposition ?? \"inline\", opts.acl).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_1__.catchTag(\"UploadThingError\", (e) => effect_Effect__WEBPACK_IMPORTED_MODULE_1__.fail(_uploadthing_shared__WEBPACK_IMPORTED_MODULE_6__.UploadThingError.toObject(e))), effect_Effect__WEBPACK_IMPORTED_MODULE_1__.catchTag(\"ConfigError\", () => effect_Effect__WEBPACK_IMPORTED_MODULE_1__.fail({\n\t\tcode: \"INVALID_SERVER_CONFIG\",\n\t\tmessage: \"Failed to generate presigned URL\"\n\t})));\n\tconst response = yield* uploadWithoutProgress(file, presigned).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_1__.catchTag(\"UploadThingError\", (e) => effect_Effect__WEBPACK_IMPORTED_MODULE_1__.fail(_uploadthing_shared__WEBPACK_IMPORTED_MODULE_6__.UploadThingError.toObject(e))), effect_Effect__WEBPACK_IMPORTED_MODULE_1__.catchTag(\"ResponseError\", (e) => effect_Effect__WEBPACK_IMPORTED_MODULE_1__.fail({\n\t\tcode: \"UPLOAD_FAILED\",\n\t\tmessage: \"Failed to upload file\",\n\t\tdata: e.toJSON()\n\t})));\n\treturn {\n\t\tkey: presigned.key,\n\t\turl: response.url,\n\t\tappUrl: response.appUrl,\n\t\tufsUrl: response.ufsUrl,\n\t\tlastModified: file.lastModified ?? Date.now(),\n\t\tname: file.name,\n\t\tsize: file.size,\n\t\ttype: file.type,\n\t\tcustomId: file.customId ?? null,\n\t\tfileHash: response.fileHash\n\t};\n}).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_1__.withLogSpan(\"uploadFile\"));\n\n//#endregion\n//#region src/sdk/index.ts\nvar UTApi = class {\n\tfetch;\n\tdefaultKeyType;\n\truntime;\n\topts;\n\tconstructor(options) {\n\t\tguardServerOnly();\n\t\tthis.opts = options ?? {};\n\t\tthis.fetch = this.opts.fetch ?? globalThis.fetch;\n\t\tthis.defaultKeyType = this.opts.defaultKeyType ?? \"fileKey\";\n\t\tthis.runtime = (0,_dist_upload_builder_e0_p9NOT_js__WEBPACK_IMPORTED_MODULE_5__.makeRuntime)(this.fetch, this.opts);\n\t}\n\trequestUploadThing = (pathname, body, responseSchema) => effect_Effect__WEBPACK_IMPORTED_MODULE_1__.gen(this, function* () {\n\t\tconst { apiKey } = yield* _dist_upload_builder_e0_p9NOT_js__WEBPACK_IMPORTED_MODULE_5__.UTToken;\n\t\tconst baseUrl = yield* _dist_upload_builder_e0_p9NOT_js__WEBPACK_IMPORTED_MODULE_5__.ApiUrl;\n\t\tconst httpClient = (yield* _effect_platform_HttpClient__WEBPACK_IMPORTED_MODULE_2__.HttpClient).pipe(_effect_platform_HttpClient__WEBPACK_IMPORTED_MODULE_2__.filterStatusOk);\n\t\treturn yield* _effect_platform_HttpClientRequest__WEBPACK_IMPORTED_MODULE_3__.post(pathname).pipe(_effect_platform_HttpClientRequest__WEBPACK_IMPORTED_MODULE_3__.prependUrl(baseUrl), _effect_platform_HttpClientRequest__WEBPACK_IMPORTED_MODULE_3__.bodyUnsafeJson(body), _effect_platform_HttpClientRequest__WEBPACK_IMPORTED_MODULE_3__.setHeaders({\n\t\t\t\"x-uploadthing-version\": _dist_package_Beb_iarE_js__WEBPACK_IMPORTED_MODULE_4__.version,\n\t\t\t\"x-uploadthing-be-adapter\": \"server-sdk\",\n\t\t\t\"x-uploadthing-api-key\": effect_Redacted__WEBPACK_IMPORTED_MODULE_10__.value(apiKey)\n\t\t}), httpClient.execute, effect_Effect__WEBPACK_IMPORTED_MODULE_1__.tapBoth({\n\t\t\tonSuccess: (0,_dist_upload_builder_e0_p9NOT_js__WEBPACK_IMPORTED_MODULE_5__.logHttpClientResponse)(\"UploadThing API Response\"),\n\t\t\tonFailure: (0,_dist_upload_builder_e0_p9NOT_js__WEBPACK_IMPORTED_MODULE_5__.logHttpClientError)(\"Failed to request UploadThing API\")\n\t\t}), effect_Effect__WEBPACK_IMPORTED_MODULE_1__.flatMap(_effect_platform_HttpClientResponse__WEBPACK_IMPORTED_MODULE_11__.schemaBodyJson(responseSchema)), effect_Effect__WEBPACK_IMPORTED_MODULE_1__.scoped);\n\t}).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_1__.catchTag(\"ConfigError\", (e) => new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_6__.UploadThingError({\n\t\tcode: \"INVALID_SERVER_CONFIG\",\n\t\tmessage: \"There was an error with the server configuration. More info can be found on this error's `cause` property\",\n\t\tcause: e\n\t})), effect_Effect__WEBPACK_IMPORTED_MODULE_1__.withLogSpan(\"utapi.#requestUploadThing\"));\n\texecuteAsync = async (program, signal) => {\n\t\tconst exit = await program.pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_1__.withLogSpan(\"utapi.#executeAsync\"), (e) => this.runtime.runPromiseExit(e, signal ? { signal } : void 0));\n\t\tif (exit._tag === \"Failure\") throw effect_Cause__WEBPACK_IMPORTED_MODULE_12__.squash(exit.cause);\n\t\treturn exit.value;\n\t};\n\tuploadFiles(files, opts) {\n\t\tguardServerOnly();\n\t\tconst concurrency = opts?.concurrency ?? 1;\n\t\tif (concurrency < 1 || concurrency > 25) throw new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_6__.UploadThingError({\n\t\t\tcode: \"BAD_REQUEST\",\n\t\t\tmessage: \"concurrency must be a positive integer between 1 and 25\"\n\t\t});\n\t\tconst program = effect_Effect__WEBPACK_IMPORTED_MODULE_1__.forEach(effect_Array__WEBPACK_IMPORTED_MODULE_13__.ensure(files), (file) => uploadFile(file, opts ?? {}).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_1__.match({\n\t\t\tonSuccess: (data) => ({\n\t\t\t\tdata,\n\t\t\t\terror: null\n\t\t\t}),\n\t\t\tonFailure: (error) => ({\n\t\t\t\tdata: null,\n\t\t\t\terror\n\t\t\t})\n\t\t})), { concurrency }).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_1__.map((ups) => Array.isArray(files) ? ups : ups[0]), effect_Effect__WEBPACK_IMPORTED_MODULE_1__.tap((res) => effect_Effect__WEBPACK_IMPORTED_MODULE_1__.logDebug(\"Finished uploading\").pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_1__.annotateLogs(\"uploadResult\", res))), effect_Effect__WEBPACK_IMPORTED_MODULE_1__.withLogSpan(\"uploadFiles\"));\n\t\treturn this.executeAsync(program, opts?.signal);\n\t}\n\tuploadFilesFromUrl(urls, opts) {\n\t\tguardServerOnly();\n\t\tconst concurrency = opts?.concurrency ?? 1;\n\t\tif (concurrency < 1 || concurrency > 25) throw new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_6__.UploadThingError({\n\t\t\tcode: \"BAD_REQUEST\",\n\t\t\tmessage: \"concurrency must be a positive integer between 1 and 25\"\n\t\t});\n\t\tconst program = effect_Effect__WEBPACK_IMPORTED_MODULE_1__.forEach(effect_Array__WEBPACK_IMPORTED_MODULE_13__.ensure(urls), (url) => downloadFile(url).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_1__.flatMap((file) => uploadFile(file, opts ?? {})), effect_Effect__WEBPACK_IMPORTED_MODULE_1__.match({\n\t\t\tonSuccess: (data) => ({\n\t\t\t\tdata,\n\t\t\t\terror: null\n\t\t\t}),\n\t\t\tonFailure: (error) => ({\n\t\t\t\tdata: null,\n\t\t\t\terror\n\t\t\t})\n\t\t})), { concurrency }).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_1__.map((ups) => Array.isArray(urls) ? ups : ups[0]), effect_Effect__WEBPACK_IMPORTED_MODULE_1__.tap((res) => effect_Effect__WEBPACK_IMPORTED_MODULE_1__.logDebug(\"Finished uploading\").pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_1__.annotateLogs(\"uploadResult\", res))), effect_Effect__WEBPACK_IMPORTED_MODULE_1__.withLogSpan(\"uploadFiles\")).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_1__.withLogSpan(\"uploadFilesFromUrl\"));\n\t\treturn this.executeAsync(program, opts?.signal);\n\t}\n\t/**\n\t* Request to delete files from UploadThing storage.\n\t* @param {string | string[]} fileKeys\n\t*\n\t* @example\n\t* await deleteFiles(\"2e0fdb64-9957-4262-8e45-f372ba903ac8_image.jpg\");\n\t*\n\t* @example\n\t* await deleteFiles([\"2e0fdb64-9957-4262-8e45-f372ba903ac8_image.jpg\",\"1649353b-04ea-48a2-9db7-31de7f562c8d_image2.jpg\"])\n\t*\n\t* @example\n\t* await deleteFiles(\"myCustomIdentifier\", { keyType: \"customId\" })\n\t*/\n\tdeleteFiles = async (keys, opts) => {\n\t\tguardServerOnly();\n\t\tconst { keyType = this.defaultKeyType } = opts ?? {};\n\t\tclass DeleteFileResponse extends effect_Schema__WEBPACK_IMPORTED_MODULE_14__.Class(\"DeleteFileResponse\")({\n\t\t\tsuccess: effect_Schema__WEBPACK_IMPORTED_MODULE_14__.Boolean,\n\t\t\tdeletedCount: effect_Schema__WEBPACK_IMPORTED_MODULE_14__.Number\n\t\t}) {}\n\t\treturn await this.executeAsync(this.requestUploadThing(\"/v6/deleteFiles\", keyType === \"fileKey\" ? { fileKeys: effect_Array__WEBPACK_IMPORTED_MODULE_13__.ensure(keys) } : { customIds: effect_Array__WEBPACK_IMPORTED_MODULE_13__.ensure(keys) }, DeleteFileResponse).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_1__.withLogSpan(\"deleteFiles\")));\n\t};\n\t/**\n\t* Request file URLs from UploadThing storage.\n\t* @param {string | string[]} fileKeys\n\t*\n\t* @example\n\t* const data = await getFileUrls(\"2e0fdb64-9957-4262-8e45-f372ba903ac8_image.jpg\");\n\t* console.log(data); // [{key: \"2e0fdb64-9957-4262-8e45-f372ba903ac8_image.jpg\", url: \"https://uploadthing.com/f/2e0fdb64-9957-4262-8e45-f372ba903ac8_image.jpg\"}]\n\t*\n\t* @example\n\t* const data = await getFileUrls([\"2e0fdb64-9957-4262-8e45-f372ba903ac8_image.jpg\",\"1649353b-04ea-48a2-9db7-31de7f562c8d_image2.jpg\"])\n\t* console.log(data) // [{key: \"2e0fdb64-9957-4262-8e45-f372ba903ac8_image.jpg\", url: \"https://uploadthing.com/f/2e0fdb64-9957-4262-8e45-f372ba903ac8_image.jpg\" },{key: \"1649353b-04ea-48a2-9db7-31de7f562c8d_image2.jpg\", url: \"https://uploadthing.com/f/1649353b-04ea-48a2-9db7-31de7f562c8d_image2.jpg\"}]\n\t*\n\t* @deprecated - See https://docs.uploadthing.com/working-with-files#accessing-files for info how to access files\n\t*/\n\tgetFileUrls = async (keys, opts) => {\n\t\tguardServerOnly();\n\t\tconst { keyType = this.defaultKeyType } = opts ?? {};\n\t\tclass GetFileUrlResponse extends effect_Schema__WEBPACK_IMPORTED_MODULE_14__.Class(\"GetFileUrlResponse\")({ data: effect_Schema__WEBPACK_IMPORTED_MODULE_14__.Array(effect_Schema__WEBPACK_IMPORTED_MODULE_14__.Struct({\n\t\t\tkey: effect_Schema__WEBPACK_IMPORTED_MODULE_14__.String,\n\t\t\turl: effect_Schema__WEBPACK_IMPORTED_MODULE_14__.String\n\t\t})) }) {}\n\t\treturn await this.executeAsync(this.requestUploadThing(\"/v6/getFileUrl\", keyType === \"fileKey\" ? { fileKeys: effect_Array__WEBPACK_IMPORTED_MODULE_13__.ensure(keys) } : { customIds: effect_Array__WEBPACK_IMPORTED_MODULE_13__.ensure(keys) }, GetFileUrlResponse).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_1__.withLogSpan(\"getFileUrls\")));\n\t};\n\t/**\n\t* Request file list from UploadThing storage.\n\t* @param {object} opts\n\t* @param {number} opts.limit The maximum number of files to return\n\t* @param {number} opts.offset The number of files to skip\n\t*\n\t* @example\n\t* const data = await listFiles({ limit: 1 });\n\t* console.log(data); // { key: \"2e0fdb64-9957-4262-8e45-f372ba903ac8_image.jpg\", id: \"2e0fdb64-9957-4262-8e45-f372ba903ac8\" }\n\t*/\n\tlistFiles = async (opts) => {\n\t\tguardServerOnly();\n\t\tclass ListFileResponse extends effect_Schema__WEBPACK_IMPORTED_MODULE_14__.Class(\"ListFileResponse\")({\n\t\t\thasMore: effect_Schema__WEBPACK_IMPORTED_MODULE_14__.Boolean,\n\t\t\tfiles: effect_Schema__WEBPACK_IMPORTED_MODULE_14__.Array(effect_Schema__WEBPACK_IMPORTED_MODULE_14__.Struct({\n\t\t\t\tid: effect_Schema__WEBPACK_IMPORTED_MODULE_14__.String,\n\t\t\t\tcustomId: effect_Schema__WEBPACK_IMPORTED_MODULE_14__.NullOr(effect_Schema__WEBPACK_IMPORTED_MODULE_14__.String),\n\t\t\t\tkey: effect_Schema__WEBPACK_IMPORTED_MODULE_14__.String,\n\t\t\t\tname: effect_Schema__WEBPACK_IMPORTED_MODULE_14__.String,\n\t\t\t\tsize: effect_Schema__WEBPACK_IMPORTED_MODULE_14__.Number,\n\t\t\t\tstatus: effect_Schema__WEBPACK_IMPORTED_MODULE_14__.Literal(\"Deletion Pending\", \"Failed\", \"Uploaded\", \"Uploading\"),\n\t\t\t\tuploadedAt: effect_Schema__WEBPACK_IMPORTED_MODULE_14__.Number\n\t\t\t}))\n\t\t}) {}\n\t\treturn await this.executeAsync(this.requestUploadThing(\"/v6/listFiles\", { ...opts }, ListFileResponse).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_1__.withLogSpan(\"listFiles\")));\n\t};\n\trenameFiles = async (updates) => {\n\t\tguardServerOnly();\n\t\tclass RenameFileResponse extends effect_Schema__WEBPACK_IMPORTED_MODULE_14__.Class(\"RenameFileResponse\")({ success: effect_Schema__WEBPACK_IMPORTED_MODULE_14__.Boolean }) {}\n\t\treturn await this.executeAsync(this.requestUploadThing(\"/v6/renameFiles\", { updates: effect_Array__WEBPACK_IMPORTED_MODULE_13__.ensure(updates) }, RenameFileResponse).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_1__.withLogSpan(\"renameFiles\")));\n\t};\n\tgetUsageInfo = async () => {\n\t\tguardServerOnly();\n\t\tclass GetUsageInfoResponse extends effect_Schema__WEBPACK_IMPORTED_MODULE_14__.Class(\"GetUsageInfoResponse\")({\n\t\t\ttotalBytes: effect_Schema__WEBPACK_IMPORTED_MODULE_14__.Number,\n\t\t\tappTotalBytes: effect_Schema__WEBPACK_IMPORTED_MODULE_14__.Number,\n\t\t\tfilesUploaded: effect_Schema__WEBPACK_IMPORTED_MODULE_14__.Number,\n\t\t\tlimitBytes: effect_Schema__WEBPACK_IMPORTED_MODULE_14__.Number\n\t\t}) {}\n\t\treturn await this.executeAsync(this.requestUploadThing(\"/v6/getUsageInfo\", {}, GetUsageInfoResponse).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_1__.withLogSpan(\"getUsageInfo\")));\n\t};\n\t/**\n\t* Generate a presigned url for a private file\n\t* Unlike {@link getSignedURL}, this method does not make a fetch request to the UploadThing API\n\t* and is the recommended way to generate a presigned url for a private file.\n\t**/\n\tgenerateSignedURL = async (key, opts) => {\n\t\tguardServerOnly();\n\t\tconst expiresIn = (0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_6__.parseTimeToSeconds)(opts?.expiresIn ?? \"5 minutes\");\n\t\tif (opts?.expiresIn && isNaN(expiresIn)) throw new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_6__.UploadThingError({\n\t\t\tcode: \"BAD_REQUEST\",\n\t\t\tmessage: \"expiresIn must be a valid time string, for example '1d', '2 days', or a number of seconds.\"\n\t\t});\n\t\tif (expiresIn > 86400 * 7) throw new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_6__.UploadThingError({\n\t\t\tcode: \"BAD_REQUEST\",\n\t\t\tmessage: \"expiresIn must be less than 7 days (604800 seconds).\"\n\t\t});\n\t\tconst program = effect_Effect__WEBPACK_IMPORTED_MODULE_1__.gen(function* () {\n\t\t\tconst { apiKey, appId } = yield* _dist_upload_builder_e0_p9NOT_js__WEBPACK_IMPORTED_MODULE_5__.UTToken;\n\t\t\tconst appIdLocation = yield* _dist_upload_builder_e0_p9NOT_js__WEBPACK_IMPORTED_MODULE_5__.UfsAppIdLocation;\n\t\t\tconst ufsHost = yield* _dist_upload_builder_e0_p9NOT_js__WEBPACK_IMPORTED_MODULE_5__.UfsHost;\n\t\t\tconst proto = ufsHost.includes(\"local\") ? \"http\" : \"https\";\n\t\t\tconst urlBase = appIdLocation === \"subdomain\" ? `${proto}://${appId}.${ufsHost}/f/${key}` : `${proto}://${ufsHost}/a/${appId}/${key}`;\n\t\t\tconst ufsUrl = yield* (0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_6__.generateSignedURL)(urlBase, apiKey, { ttlInSeconds: expiresIn });\n\t\t\treturn { ufsUrl };\n\t\t});\n\t\treturn await this.executeAsync(program.pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_1__.catchTag(\"ConfigError\", (e) => new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_6__.UploadThingError({\n\t\t\tcode: \"INVALID_SERVER_CONFIG\",\n\t\t\tmessage: \"There was an error with the server configuration. More info can be found on this error's `cause` property\",\n\t\t\tcause: e\n\t\t})), effect_Effect__WEBPACK_IMPORTED_MODULE_1__.withLogSpan(\"generateSignedURL\")));\n\t};\n\t/**\n\t* Request a presigned url for a private file(s)\n\t* @remarks This method is no longer recommended as it makes a fetch\n\t* request to the UploadThing API which incurs redundant latency. It\n\t* will be deprecated in UploadThing v8 and removed in UploadThing v9.\n\t*\n\t* @see {@link generateSignedURL} for a more efficient way to generate a presigned url\n\t**/\n\tgetSignedURL = async (key, opts) => {\n\t\tguardServerOnly();\n\t\tconst expiresIn = opts?.expiresIn ? (0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_6__.parseTimeToSeconds)(opts.expiresIn) : void 0;\n\t\tconst { keyType = this.defaultKeyType } = opts ?? {};\n\t\tif (opts?.expiresIn && isNaN(expiresIn)) throw new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_6__.UploadThingError({\n\t\t\tcode: \"BAD_REQUEST\",\n\t\t\tmessage: \"expiresIn must be a valid time string, for example '1d', '2 days', or a number of seconds.\"\n\t\t});\n\t\tif (expiresIn && expiresIn > 86400 * 7) throw new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_6__.UploadThingError({\n\t\t\tcode: \"BAD_REQUEST\",\n\t\t\tmessage: \"expiresIn must be less than 7 days (604800 seconds).\"\n\t\t});\n\t\tclass GetSignedUrlResponse extends effect_Schema__WEBPACK_IMPORTED_MODULE_14__.Class(\"GetSignedUrlResponse\")({\n\t\t\turl: effect_Schema__WEBPACK_IMPORTED_MODULE_14__.String,\n\t\t\tufsUrl: effect_Schema__WEBPACK_IMPORTED_MODULE_14__.String\n\t\t}) {}\n\t\treturn await this.executeAsync(this.requestUploadThing(\"/v6/requestFileAccess\", keyType === \"fileKey\" ? {\n\t\t\tfileKey: key,\n\t\t\texpiresIn\n\t\t} : {\n\t\t\tcustomId: key,\n\t\t\texpiresIn\n\t\t}, GetSignedUrlResponse).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_1__.withLogSpan(\"getSignedURL\")));\n\t};\n\t/**\n\t* Update the ACL of a file or set of files.\n\t*\n\t* @example\n\t* // Make a single file public\n\t* await utapi.updateACL(\"2e0fdb64-9957-4262-8e45-f372ba903ac8_image.jpg\", \"public-read\");\n\t*\n\t* // Make multiple files private\n\t* await utapi.updateACL(\n\t*   [\n\t*     \"2e0fdb64-9957-4262-8e45-f372ba903ac8_image.jpg\",\n\t*     \"1649353b-04ea-48a2-9db7-31de7f562c8d_image2.jpg\",\n\t*   ],\n\t*   \"private\",\n\t* );\n\t*/\n\tupdateACL = async (keys, acl, opts) => {\n\t\tguardServerOnly();\n\t\tconst { keyType = this.defaultKeyType } = opts ?? {};\n\t\tconst updates = effect_Array__WEBPACK_IMPORTED_MODULE_13__.ensure(keys).map((key) => {\n\t\t\treturn keyType === \"fileKey\" ? {\n\t\t\t\tfileKey: key,\n\t\t\t\tacl\n\t\t\t} : {\n\t\t\t\tcustomId: key,\n\t\t\t\tacl\n\t\t\t};\n\t\t});\n\t\tconst responseSchema = effect_Schema__WEBPACK_IMPORTED_MODULE_14__.Struct({ success: effect_Schema__WEBPACK_IMPORTED_MODULE_14__.Boolean });\n\t\treturn await this.executeAsync(this.requestUploadThing(\"/v6/updateACL\", { updates }, responseSchema).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_1__.withLogSpan(\"updateACL\")));\n\t};\n};\n\n//#endregion\n//#region src/server.ts\nconst createUploadthing = (opts) => (0,_dist_upload_builder_e0_p9NOT_js__WEBPACK_IMPORTED_MODULE_5__.createBuilder)(opts);\nconst createRouteHandler = (opts) => {\n\treturn (0,_dist_upload_builder_e0_p9NOT_js__WEBPACK_IMPORTED_MODULE_5__.makeAdapterHandler)((ev) => effect_Effect__WEBPACK_IMPORTED_MODULE_1__.succeed({ req: \"request\" in ev ? ev.request : ev }), (ev) => effect_Effect__WEBPACK_IMPORTED_MODULE_1__.succeed(\"request\" in ev ? ev.request : ev), opts, \"server\");\n};\nconst extractRouterConfig$1 = (router) => effect_Effect__WEBPACK_IMPORTED_MODULE_1__.runSync((0,_dist_upload_builder_e0_p9NOT_js__WEBPACK_IMPORTED_MODULE_5__.extractRouterConfig)(router));\n\n//#endregion\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/uploadthing/server/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/uploadthing/client/index.js":
/*!**************************************************!*\
  !*** ./node_modules/uploadthing/client/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UploadAbortedError: () => (/* reexport safe */ _uploadthing_shared__WEBPACK_IMPORTED_MODULE_3__.UploadAbortedError),\n/* harmony export */   UploadPausedError: () => (/* reexport safe */ _uploadthing_shared__WEBPACK_IMPORTED_MODULE_3__.UploadPausedError),\n/* harmony export */   allowedContentTextLabelGenerator: () => (/* reexport safe */ _uploadthing_shared__WEBPACK_IMPORTED_MODULE_3__.allowedContentTextLabelGenerator),\n/* harmony export */   bytesToFileSize: () => (/* reexport safe */ _uploadthing_shared__WEBPACK_IMPORTED_MODULE_3__.bytesToFileSize),\n/* harmony export */   genUploader: () => (/* binding */ genUploader),\n/* harmony export */   generateClientDropzoneAccept: () => (/* reexport safe */ _uploadthing_shared__WEBPACK_IMPORTED_MODULE_3__.generateClientDropzoneAccept),\n/* harmony export */   generateMimeTypes: () => (/* reexport safe */ _uploadthing_shared__WEBPACK_IMPORTED_MODULE_3__.generateMimeTypes),\n/* harmony export */   generatePermittedFileTypes: () => (/* reexport safe */ _uploadthing_shared__WEBPACK_IMPORTED_MODULE_3__.generatePermittedFileTypes),\n/* harmony export */   isValidFileSize: () => (/* binding */ isValidFileSize),\n/* harmony export */   isValidFileType: () => (/* binding */ isValidFileType),\n/* harmony export */   version: () => (/* binding */ version$1)\n/* harmony export */ });\n/* harmony import */ var _dist_package_Beb_iarE_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dist/package-Beb-iarE.js */ \"(ssr)/./node_modules/uploadthing/dist/package-Beb-iarE.js\");\n/* harmony import */ var _dist_ut_reporter_C8446w_v_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../dist/ut-reporter-C8446w-v.js */ \"(ssr)/./node_modules/uploadthing/dist/ut-reporter-C8446w-v.js\");\n/* harmony import */ var _dist_deprecations_pLmw6Ytd_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../dist/deprecations-pLmw6Ytd.js */ \"(ssr)/./node_modules/uploadthing/dist/deprecations-pLmw6Ytd.js\");\n/* harmony import */ var effect_Array__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! effect/Array */ \"(ssr)/./node_modules/effect/dist/esm/Array.js\");\n/* harmony import */ var effect_Micro__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! effect/Micro */ \"(ssr)/./node_modules/effect/dist/esm/Micro.js\");\n/* harmony import */ var _uploadthing_shared__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @uploadthing/shared */ \"(ssr)/./node_modules/@uploadthing/shared/dist/index.js\");\n/* harmony import */ var effect_Function__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! effect/Function */ \"(ssr)/./node_modules/effect/dist/esm/Function.js\");\n/* harmony import */ var effect_Predicate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! effect/Predicate */ \"(ssr)/./node_modules/effect/dist/esm/Predicate.js\");\n\n\n\n\n\n\n\n\n\n\n//#region src/_internal/upload-browser.ts\nconst uploadWithProgress = (file, rangeStart, presigned, opts) => effect_Micro__WEBPACK_IMPORTED_MODULE_0__.async((resume) => {\n\tconst xhr = new XMLHttpRequest();\n\txhr.open(\"PUT\", presigned.url, true);\n\txhr.setRequestHeader(\"Range\", `bytes=${rangeStart}-`);\n\txhr.setRequestHeader(\"x-uploadthing-version\", _dist_package_Beb_iarE_js__WEBPACK_IMPORTED_MODULE_1__.version);\n\txhr.setRequestHeader(\"b3\", opts.traceHeaders.b3);\n\txhr.setRequestHeader(\"traceparent\", opts.traceHeaders.traceparent);\n\txhr.responseType = \"json\";\n\tlet previousLoaded = 0;\n\txhr.upload.addEventListener(\"progress\", ({ loaded }) => {\n\t\tconst delta = loaded - previousLoaded;\n\t\topts.onUploadProgress?.({\n\t\t\tloaded,\n\t\t\tdelta\n\t\t});\n\t\tpreviousLoaded = loaded;\n\t});\n\txhr.addEventListener(\"load\", () => {\n\t\tif (xhr.status >= 200 && xhr.status < 300 && (0,effect_Predicate__WEBPACK_IMPORTED_MODULE_2__.isRecord)(xhr.response)) if ((0,effect_Predicate__WEBPACK_IMPORTED_MODULE_2__.hasProperty)(xhr.response, \"error\")) resume(new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_3__.UploadThingError({\n\t\t\tcode: \"UPLOAD_FAILED\",\n\t\t\tmessage: String(xhr.response.error),\n\t\t\tdata: xhr.response\n\t\t}));\n\t\telse resume(effect_Micro__WEBPACK_IMPORTED_MODULE_0__.succeed(xhr.response));\n\t\telse resume(new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_3__.UploadThingError({\n\t\t\tcode: \"UPLOAD_FAILED\",\n\t\t\tmessage: `XHR failed ${xhr.status} ${xhr.statusText}`,\n\t\t\tdata: xhr.response\n\t\t}));\n\t});\n\txhr.addEventListener(\"error\", () => {\n\t\tresume(new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_3__.UploadThingError({ code: \"UPLOAD_FAILED\" }));\n\t});\n\tconst formData = new FormData();\n\t/**\n\t* iOS/React Native FormData handling requires special attention:\n\t*\n\t* Issue: In React Native, iOS crashes with \"attempt to insert nil object\" when appending File directly\n\t* to FormData. This happens because iOS tries to create NSDictionary from the file object and expects\n\t* specific structure {uri, type, name}.\n\t*\n\t*\n\t* Note: Don't try to use Blob or modify File object - iOS specifically needs plain object\n\t* with these properties to create valid NSDictionary.\n\t*/\n\tif (\"uri\" in file) formData.append(\"file\", {\n\t\turi: file.uri,\n\t\ttype: file.type,\n\t\tname: file.name,\n\t\t...rangeStart > 0 && { range: rangeStart }\n\t});\n\telse formData.append(\"file\", rangeStart > 0 ? file.slice(rangeStart) : file);\n\txhr.send(formData);\n\treturn effect_Micro__WEBPACK_IMPORTED_MODULE_0__.sync(() => xhr.abort());\n});\nconst uploadFile = (file, presigned, opts) => (0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_3__.fetchEff)(presigned.url, {\n\tmethod: \"HEAD\",\n\theaders: opts.traceHeaders\n}).pipe(effect_Micro__WEBPACK_IMPORTED_MODULE_0__.map(({ headers }) => parseInt(headers.get(\"x-ut-range-start\") ?? \"0\", 10)), effect_Micro__WEBPACK_IMPORTED_MODULE_0__.tap((start) => opts.onUploadProgress?.({\n\tdelta: start,\n\tloaded: start\n})), effect_Micro__WEBPACK_IMPORTED_MODULE_0__.flatMap((start) => uploadWithProgress(file, start, presigned, {\n\ttraceHeaders: opts.traceHeaders,\n\tonUploadProgress: (progressEvent) => opts.onUploadProgress?.({\n\t\tdelta: progressEvent.delta,\n\t\tloaded: progressEvent.loaded + start\n\t})\n})), effect_Micro__WEBPACK_IMPORTED_MODULE_0__.map(effect_Function__WEBPACK_IMPORTED_MODULE_4__.unsafeCoerce), effect_Micro__WEBPACK_IMPORTED_MODULE_0__.map((uploadResponse) => ({\n\tname: file.name,\n\tsize: file.size,\n\tkey: presigned.key,\n\tlastModified: file.lastModified,\n\tserverData: uploadResponse.serverData,\n\tget url() {\n\t\t(0,_dist_deprecations_pLmw6Ytd_js__WEBPACK_IMPORTED_MODULE_5__.logDeprecationWarning)(\"`file.url` is deprecated and will be removed in uploadthing v9. Use `file.ufsUrl` instead.\");\n\t\treturn uploadResponse.url;\n\t},\n\tget appUrl() {\n\t\t(0,_dist_deprecations_pLmw6Ytd_js__WEBPACK_IMPORTED_MODULE_5__.logDeprecationWarning)(\"`file.appUrl` is deprecated and will be removed in uploadthing v9. Use `file.ufsUrl` instead.\");\n\t\treturn uploadResponse.appUrl;\n\t},\n\tufsUrl: uploadResponse.ufsUrl,\n\tcustomId: presigned.customId,\n\ttype: file.type,\n\tfileHash: uploadResponse.fileHash\n})));\nconst uploadFilesInternal = (endpoint, opts) => {\n\tconst traceHeaders = (0,_dist_ut_reporter_C8446w_v_js__WEBPACK_IMPORTED_MODULE_6__.generateTraceHeaders)();\n\tconst reportEventToUT = (0,_dist_ut_reporter_C8446w_v_js__WEBPACK_IMPORTED_MODULE_6__.createUTReporter)({\n\t\tendpoint: String(endpoint),\n\t\tpackage: opts.package,\n\t\turl: opts.url,\n\t\theaders: opts.headers,\n\t\ttraceHeaders\n\t});\n\tconst totalSize = opts.files.reduce((acc, f) => acc + f.size, 0);\n\tlet totalLoaded = 0;\n\treturn effect_Micro__WEBPACK_IMPORTED_MODULE_0__.flatMap(reportEventToUT(\"upload\", {\n\t\tinput: \"input\" in opts ? opts.input : null,\n\t\tfiles: opts.files.map((f) => ({\n\t\t\tname: f.name,\n\t\t\tsize: f.size,\n\t\t\ttype: f.type,\n\t\t\tlastModified: f.lastModified\n\t\t}))\n\t}), (presigneds) => effect_Micro__WEBPACK_IMPORTED_MODULE_0__.forEach(presigneds, (presigned, i) => effect_Micro__WEBPACK_IMPORTED_MODULE_0__.flatMap(effect_Micro__WEBPACK_IMPORTED_MODULE_0__.sync(() => opts.onUploadBegin?.({ file: opts.files[i].name })), () => uploadFile(opts.files[i], presigned, {\n\t\ttraceHeaders,\n\t\tonUploadProgress: (ev) => {\n\t\t\ttotalLoaded += ev.delta;\n\t\t\topts.onUploadProgress?.({\n\t\t\t\tfile: opts.files[i],\n\t\t\t\tprogress: ev.loaded / opts.files[i].size * 100,\n\t\t\t\tloaded: ev.loaded,\n\t\t\t\tdelta: ev.delta,\n\t\t\t\ttotalLoaded,\n\t\t\t\ttotalProgress: totalLoaded / totalSize\n\t\t\t});\n\t\t}\n\t})), { concurrency: 6 }));\n};\n\n//#endregion\n//#region src/client.ts\nconst version$1 = _dist_package_Beb_iarE_js__WEBPACK_IMPORTED_MODULE_1__.version;\n/**\n* Validate that a file is of a valid type given a route config\n* @public\n*/\nconst isValidFileType = (file, routeConfig) => effect_Micro__WEBPACK_IMPORTED_MODULE_0__.runSync((0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_3__.matchFileType)(file, (0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_3__.objectKeys)(routeConfig)).pipe(effect_Micro__WEBPACK_IMPORTED_MODULE_0__.map((type) => file.type.includes(type)), effect_Micro__WEBPACK_IMPORTED_MODULE_0__.orElseSucceed(() => false)));\n/**\n* Validate that a file is of a valid size given a route config\n* @public\n*/\nconst isValidFileSize = (file, routeConfig) => effect_Micro__WEBPACK_IMPORTED_MODULE_0__.runSync((0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_3__.matchFileType)(file, (0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_3__.objectKeys)(routeConfig)).pipe(effect_Micro__WEBPACK_IMPORTED_MODULE_0__.flatMap((type) => (0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_3__.fileSizeToBytes)(routeConfig[type].maxFileSize)), effect_Micro__WEBPACK_IMPORTED_MODULE_0__.map((maxFileSize) => file.size <= maxFileSize), effect_Micro__WEBPACK_IMPORTED_MODULE_0__.orElseSucceed(() => false)));\n/**\n* Generate a typed uploader for a given FileRouter\n* @public\n*/\nconst genUploader = (initOpts) => {\n\tconst routeRegistry = (0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_3__.createIdentityProxy)();\n\tconst controllableUpload = async (slug, opts) => {\n\t\tconst uploads = new Map();\n\t\tconst endpoint = typeof slug === \"function\" ? slug(routeRegistry) : slug;\n\t\tconst traceHeaders = (0,_dist_ut_reporter_C8446w_v_js__WEBPACK_IMPORTED_MODULE_6__.generateTraceHeaders)();\n\t\tconst utReporter = (0,_dist_ut_reporter_C8446w_v_js__WEBPACK_IMPORTED_MODULE_6__.createUTReporter)({\n\t\t\tendpoint: String(endpoint),\n\t\t\tpackage: initOpts?.package ?? \"uploadthing/client\",\n\t\t\turl: (0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_3__.resolveMaybeUrlArg)(initOpts?.url),\n\t\t\theaders: opts.headers,\n\t\t\ttraceHeaders\n\t\t});\n\t\tconst fetchFn = initOpts?.fetch ?? window.fetch;\n\t\tconst presigneds = await effect_Micro__WEBPACK_IMPORTED_MODULE_0__.runPromise(utReporter(\"upload\", {\n\t\t\tinput: \"input\" in opts ? opts.input : null,\n\t\t\tfiles: opts.files.map((f) => ({\n\t\t\t\tname: f.name,\n\t\t\t\tsize: f.size,\n\t\t\t\ttype: f.type,\n\t\t\t\tlastModified: f.lastModified\n\t\t\t}))\n\t\t}).pipe(effect_Micro__WEBPACK_IMPORTED_MODULE_0__.provideService(_uploadthing_shared__WEBPACK_IMPORTED_MODULE_3__.FetchContext, fetchFn)));\n\t\tconst totalSize = opts.files.reduce((acc, f) => acc + f.size, 0);\n\t\tlet totalLoaded = 0;\n\t\tconst uploadEffect = (file, presigned) => uploadFile(file, presigned, {\n\t\t\ttraceHeaders,\n\t\t\tonUploadProgress: (progressEvent) => {\n\t\t\t\ttotalLoaded += progressEvent.delta;\n\t\t\t\topts.onUploadProgress?.({\n\t\t\t\t\t...progressEvent,\n\t\t\t\t\tfile,\n\t\t\t\t\tprogress: Math.round(progressEvent.loaded / file.size * 100),\n\t\t\t\t\ttotalLoaded,\n\t\t\t\t\ttotalProgress: Math.round(totalLoaded / totalSize * 100)\n\t\t\t\t});\n\t\t\t}\n\t\t}).pipe(effect_Micro__WEBPACK_IMPORTED_MODULE_0__.provideService(_uploadthing_shared__WEBPACK_IMPORTED_MODULE_3__.FetchContext, fetchFn));\n\t\tfor (const [i, p] of presigneds.entries()) {\n\t\t\tconst file = opts.files[i];\n\t\t\tif (!file) continue;\n\t\t\tconst deferred = (0,_dist_ut_reporter_C8446w_v_js__WEBPACK_IMPORTED_MODULE_6__.createDeferred)();\n\t\t\tuploads.set(file, {\n\t\t\t\tdeferred,\n\t\t\t\tpresigned: p\n\t\t\t});\n\t\t\teffect_Micro__WEBPACK_IMPORTED_MODULE_0__.runPromiseExit(uploadEffect(file, p), { signal: deferred.ac.signal }).then((result) => {\n\t\t\t\tif (result._tag === \"Success\") return deferred.resolve(result.value);\n\t\t\t\telse if (result.cause._tag === \"Interrupt\") throw new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_3__.UploadPausedError();\n\t\t\t\tthrow effect_Micro__WEBPACK_IMPORTED_MODULE_0__.causeSquash(result.cause);\n\t\t\t}).catch((err) => {\n\t\t\t\tif (err instanceof _uploadthing_shared__WEBPACK_IMPORTED_MODULE_3__.UploadPausedError) return;\n\t\t\t\tdeferred.reject(err);\n\t\t\t});\n\t\t}\n\t\t/**\n\t\t* Pause an ongoing upload\n\t\t* @param file The file upload you want to pause. Can be omitted to pause all files\n\t\t*/\n\t\tconst pauseUpload = (file) => {\n\t\t\tconst files = effect_Array__WEBPACK_IMPORTED_MODULE_7__.ensure(file ?? opts.files);\n\t\t\tfor (const file$1 of files) {\n\t\t\t\tconst upload = uploads.get(file$1);\n\t\t\t\tif (!upload) return;\n\t\t\t\tif (upload.deferred.ac.signal.aborted) throw new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_3__.UploadAbortedError();\n\t\t\t\tupload.deferred.ac.abort();\n\t\t\t}\n\t\t};\n\t\t/**\n\t\t* Resume a paused upload\n\t\t* @param file The file upload you want to resume. Can be omitted to resume all files\n\t\t*/\n\t\tconst resumeUpload = (file) => {\n\t\t\tconst files = effect_Array__WEBPACK_IMPORTED_MODULE_7__.ensure(file ?? opts.files);\n\t\t\tfor (const file$1 of files) {\n\t\t\t\tconst upload = uploads.get(file$1);\n\t\t\t\tif (!upload) throw \"No upload found\";\n\t\t\t\tupload.deferred.ac = new AbortController();\n\t\t\t\teffect_Micro__WEBPACK_IMPORTED_MODULE_0__.runPromiseExit(uploadEffect(file$1, upload.presigned), { signal: upload.deferred.ac.signal }).then((result) => {\n\t\t\t\t\tif (result._tag === \"Success\") return upload.deferred.resolve(result.value);\n\t\t\t\t\telse if (result.cause._tag === \"Interrupt\") throw new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_3__.UploadPausedError();\n\t\t\t\t\tthrow effect_Micro__WEBPACK_IMPORTED_MODULE_0__.causeSquash(result.cause);\n\t\t\t\t}).catch((err) => {\n\t\t\t\t\tif (err instanceof _uploadthing_shared__WEBPACK_IMPORTED_MODULE_3__.UploadPausedError) return;\n\t\t\t\t\tupload.deferred.reject(err);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\t/**\n\t\t* Wait for an upload to complete\n\t\t* @param file The file upload you want to wait for. Can be omitted to wait for all files\n\t\t*/\n\t\tconst done = async (file) => {\n\t\t\tconst promises = [];\n\t\t\tconst files = effect_Array__WEBPACK_IMPORTED_MODULE_7__.ensure(file ?? opts.files);\n\t\t\tfor (const file$1 of files) {\n\t\t\t\tconst upload = uploads.get(file$1);\n\t\t\t\tif (!upload) throw \"No upload found\";\n\t\t\t\tpromises.push(upload.deferred.promise);\n\t\t\t}\n\t\t\tconst results = await Promise.all(promises);\n\t\t\treturn file ? results[0] : results;\n\t\t};\n\t\treturn {\n\t\t\tpauseUpload,\n\t\t\tresumeUpload,\n\t\t\tdone\n\t\t};\n\t};\n\t/**\n\t* One step upload function that both requests presigned URLs\n\t* and then uploads the files to UploadThing\n\t*/\n\tconst typedUploadFiles = (slug, opts) => {\n\t\tconst endpoint = typeof slug === \"function\" ? slug(routeRegistry) : slug;\n\t\tconst fetchFn = initOpts?.fetch ?? window.fetch;\n\t\treturn uploadFilesInternal(endpoint, {\n\t\t\t...opts,\n\t\t\tskipPolling: {},\n\t\t\turl: (0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_3__.resolveMaybeUrlArg)(initOpts?.url),\n\t\t\tpackage: initOpts?.package ?? \"uploadthing/client\",\n\t\t\tinput: opts.input\n\t\t}).pipe(effect_Micro__WEBPACK_IMPORTED_MODULE_0__.provideService(_uploadthing_shared__WEBPACK_IMPORTED_MODULE_3__.FetchContext, fetchFn), (effect) => effect_Micro__WEBPACK_IMPORTED_MODULE_0__.runPromiseExit(effect, opts.signal && { signal: opts.signal })).then((exit) => {\n\t\t\tif (exit._tag === \"Success\") return exit.value;\n\t\t\telse if (exit.cause._tag === \"Interrupt\") throw new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_3__.UploadAbortedError();\n\t\t\tthrow effect_Micro__WEBPACK_IMPORTED_MODULE_0__.causeSquash(exit.cause);\n\t\t});\n\t};\n\treturn {\n\t\tuploadFiles: typedUploadFiles,\n\t\tcreateUpload: controllableUpload,\n\t\trouteRegistry\n\t};\n};\n\n//#endregion\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/uploadthing/client/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/uploadthing/dist/deprecations-pLmw6Ytd.js":
/*!****************************************************************!*\
  !*** ./node_modules/uploadthing/dist/deprecations-pLmw6Ytd.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logDeprecationWarning: () => (/* binding */ logDeprecationWarning)\n/* harmony export */ });\n//#region src/_internal/deprecations.ts\nconst logDeprecationWarning = (message) => {\n\tconsole.warn(`⚠️ [uploadthing][deprecated] ${message}`);\n};\n\n//#endregion\n\n//# sourceMappingURL=deprecations-pLmw6Ytd.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdXBsb2FkdGhpbmcvZGlzdC9kZXByZWNhdGlvbnMtcExtdzZZdGQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQSw4Q0FBOEMsUUFBUTtBQUN0RDs7QUFFQTtBQUNpQztBQUNqQyIsInNvdXJjZXMiOlsiL1VzZXJzL3VzYW1hL0RvY3VtZW50cy9HaXRIdWIvYWlfc2VsZmllL25vZGVfbW9kdWxlcy91cGxvYWR0aGluZy9kaXN0L2RlcHJlY2F0aW9ucy1wTG13Nll0ZC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyNyZWdpb24gc3JjL19pbnRlcm5hbC9kZXByZWNhdGlvbnMudHNcbmNvbnN0IGxvZ0RlcHJlY2F0aW9uV2FybmluZyA9IChtZXNzYWdlKSA9PiB7XG5cdGNvbnNvbGUud2Fybihg4pqg77iPIFt1cGxvYWR0aGluZ11bZGVwcmVjYXRlZF0gJHttZXNzYWdlfWApO1xufTtcblxuLy8jZW5kcmVnaW9uXG5leHBvcnQgeyBsb2dEZXByZWNhdGlvbldhcm5pbmcgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlcHJlY2F0aW9ucy1wTG13Nll0ZC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/uploadthing/dist/deprecations-pLmw6Ytd.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/uploadthing/dist/package-Beb-iarE.js":
/*!***********************************************************!*\
  !*** ./node_modules/uploadthing/dist/package-Beb-iarE.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\n//#region package.json\nvar version = \"7.7.3\";\n\n//#endregion\n\n//# sourceMappingURL=package-Beb-iarE.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdXBsb2FkdGhpbmcvZGlzdC9wYWNrYWdlLUJlYi1pYXJFLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBOztBQUVBO0FBQ21CO0FBQ25CIiwic291cmNlcyI6WyIvVXNlcnMvdXNhbWEvRG9jdW1lbnRzL0dpdEh1Yi9haV9zZWxmaWUvbm9kZV9tb2R1bGVzL3VwbG9hZHRoaW5nL2Rpc3QvcGFja2FnZS1CZWItaWFyRS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyNyZWdpb24gcGFja2FnZS5qc29uXG52YXIgdmVyc2lvbiA9IFwiNy43LjNcIjtcblxuLy8jZW5kcmVnaW9uXG5leHBvcnQgeyB2ZXJzaW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWNrYWdlLUJlYi1pYXJFLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/uploadthing/dist/package-Beb-iarE.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/uploadthing/dist/ut-reporter-C8446w-v.js":
/*!***************************************************************!*\
  !*** ./node_modules/uploadthing/dist/ut-reporter-C8446w-v.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDeferred: () => (/* binding */ createDeferred),\n/* harmony export */   createUTReporter: () => (/* binding */ createUTReporter),\n/* harmony export */   generateTraceHeaders: () => (/* binding */ generateTraceHeaders)\n/* harmony export */ });\n/* harmony import */ var _package_Beb_iarE_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./package-Beb-iarE.js */ \"(ssr)/./node_modules/uploadthing/dist/package-Beb-iarE.js\");\n/* harmony import */ var effect_Micro__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! effect/Micro */ \"(ssr)/./node_modules/effect/dist/esm/Micro.js\");\n/* harmony import */ var _uploadthing_shared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @uploadthing/shared */ \"(ssr)/./node_modules/@uploadthing/shared/dist/index.js\");\n/* harmony import */ var effect_Function__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! effect/Function */ \"(ssr)/./node_modules/effect/dist/esm/Function.js\");\n\n\n\n\n\n//#region src/_internal/deferred.ts\nconst createDeferred = () => {\n\tlet resolve;\n\tlet reject;\n\tconst ac = new AbortController();\n\tconst promise = new Promise((res, rej) => {\n\t\tresolve = res;\n\t\treject = rej;\n\t});\n\treturn {\n\t\tpromise,\n\t\tac,\n\t\tresolve,\n\t\treject\n\t};\n};\n\n//#endregion\n//#region src/_internal/random-hex.ts\nconst randomHexString = function() {\n\tconst characters = \"abcdef0123456789\";\n\tconst charactersLength = characters.length;\n\treturn function(length) {\n\t\tlet result = \"\";\n\t\tfor (let i = 0; i < length; i++) result += characters.charAt(Math.floor(Math.random() * charactersLength));\n\t\treturn result;\n\t};\n}();\nconst generateTraceHeaders = () => {\n\tconst traceId = randomHexString(32);\n\tconst spanId = randomHexString(16);\n\tconst sampled = \"01\";\n\treturn {\n\t\tb3: `${traceId}-${spanId}-${sampled}`,\n\t\ttraceparent: `00-${traceId}-${spanId}-${sampled}`\n\t};\n};\n\n//#endregion\n//#region src/_internal/ut-reporter.ts\nconst createAPIRequestUrl = (config) => {\n\tconst url = new URL(config.url);\n\tconst queryParams = new URLSearchParams(url.search);\n\tqueryParams.set(\"actionType\", config.actionType);\n\tqueryParams.set(\"slug\", config.slug);\n\turl.search = queryParams.toString();\n\treturn url;\n};\n/**\n* Creates a \"client\" for reporting events to the UploadThing server via the user's API endpoint.\n* Events are handled in \"./handler.ts starting at L112\"\n*/\nconst createUTReporter = (cfg) => (type, payload) => effect_Micro__WEBPACK_IMPORTED_MODULE_0__.gen(function* () {\n\tconst url = createAPIRequestUrl({\n\t\turl: cfg.url,\n\t\tslug: cfg.endpoint,\n\t\tactionType: type\n\t});\n\tconst headers = new Headers(yield* effect_Micro__WEBPACK_IMPORTED_MODULE_0__.promise(async () => typeof cfg.headers === \"function\" ? await cfg.headers() : cfg.headers));\n\tif (cfg.package) headers.set(\"x-uploadthing-package\", cfg.package);\n\theaders.set(\"x-uploadthing-version\", _package_Beb_iarE_js__WEBPACK_IMPORTED_MODULE_1__.version);\n\theaders.set(\"Content-Type\", \"application/json\");\n\theaders.set(\"b3\", cfg.traceHeaders.b3);\n\theaders.set(\"traceparent\", cfg.traceHeaders.traceparent);\n\tconst response = yield* (0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_2__.fetchEff)(url, {\n\t\tmethod: \"POST\",\n\t\tbody: JSON.stringify(payload),\n\t\theaders\n\t}).pipe(\n\t\teffect_Micro__WEBPACK_IMPORTED_MODULE_0__.andThen(_uploadthing_shared__WEBPACK_IMPORTED_MODULE_2__.parseResponseJson),\n\t\t/**\n\t\t* We don't _need_ to validate the response here, just cast it for now.\n\t\t* As of now, @effect/schema includes quite a few bytes we cut out by this...\n\t\t* We have \"strong typing\" on the backend that ensures the shape should match.\n\t\t*/\n\t\teffect_Micro__WEBPACK_IMPORTED_MODULE_0__.map(effect_Function__WEBPACK_IMPORTED_MODULE_3__.unsafeCoerce),\n\t\teffect_Micro__WEBPACK_IMPORTED_MODULE_0__.catchTag(\"FetchError\", (e) => effect_Micro__WEBPACK_IMPORTED_MODULE_0__.fail(new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_2__.UploadThingError({\n\t\t\tcode: \"INTERNAL_CLIENT_ERROR\",\n\t\t\tmessage: `Failed to report event \"${type}\" to UploadThing server`,\n\t\t\tcause: e\n\t\t}))),\n\t\teffect_Micro__WEBPACK_IMPORTED_MODULE_0__.catchTag(\"BadRequestError\", (e) => effect_Micro__WEBPACK_IMPORTED_MODULE_0__.fail(new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_2__.UploadThingError({\n\t\t\tcode: (0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_2__.getErrorTypeFromStatusCode)(e.status),\n\t\t\tmessage: e.getMessage(),\n\t\t\tcause: e.json\n\t\t}))),\n\t\teffect_Micro__WEBPACK_IMPORTED_MODULE_0__.catchTag(\"InvalidJson\", (e) => effect_Micro__WEBPACK_IMPORTED_MODULE_0__.fail(new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_2__.UploadThingError({\n\t\t\tcode: \"INTERNAL_CLIENT_ERROR\",\n\t\t\tmessage: \"Failed to parse response from UploadThing server\",\n\t\t\tcause: e\n\t\t})))\n\t);\n\treturn response;\n});\n\n//#endregion\n\n//# sourceMappingURL=ut-reporter-C8446w-v.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdXBsb2FkdGhpbmcvZGlzdC91dC1yZXBvcnRlci1DODQ0Nnctdi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQWdEO0FBQ1Y7QUFDMEU7QUFDakU7O0FBRS9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsWUFBWTtBQUM5QjtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLFFBQVEsR0FBRyxPQUFPLEdBQUcsUUFBUTtBQUN0QyxxQkFBcUIsUUFBUSxHQUFHLE9BQU8sR0FBRyxRQUFRO0FBQ2xEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRCw2Q0FBUztBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRixvQ0FBb0MsaURBQWE7QUFDakQ7QUFDQSxzQ0FBc0MseURBQU87QUFDN0M7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLDZEQUFRO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRixFQUFFLGlEQUFhLENBQUMsa0VBQWlCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLDZDQUFTLENBQUMseURBQVk7QUFDeEIsRUFBRSxrREFBYyxzQkFBc0IsOENBQVUsS0FBSyxpRUFBZ0I7QUFDckU7QUFDQSx1Q0FBdUMsS0FBSztBQUM1QztBQUNBLEdBQUc7QUFDSCxFQUFFLGtEQUFjLDJCQUEyQiw4Q0FBVSxLQUFLLGlFQUFnQjtBQUMxRSxTQUFTLCtFQUEwQjtBQUNuQztBQUNBO0FBQ0EsR0FBRztBQUNILEVBQUUsa0RBQWMsdUJBQXVCLDhDQUFVLEtBQUssaUVBQWdCO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNrRTtBQUNsRSIsInNvdXJjZXMiOlsiL1VzZXJzL3VzYW1hL0RvY3VtZW50cy9HaXRIdWIvYWlfc2VsZmllL25vZGVfbW9kdWxlcy91cGxvYWR0aGluZy9kaXN0L3V0LXJlcG9ydGVyLUM4NDQ2dy12LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHZlcnNpb24gfSBmcm9tIFwiLi9wYWNrYWdlLUJlYi1pYXJFLmpzXCI7XG5pbXBvcnQgKiBhcyBNaWNybyBmcm9tIFwiZWZmZWN0L01pY3JvXCI7XG5pbXBvcnQgeyBVcGxvYWRUaGluZ0Vycm9yLCBmZXRjaEVmZiwgZ2V0RXJyb3JUeXBlRnJvbVN0YXR1c0NvZGUsIHBhcnNlUmVzcG9uc2VKc29uIH0gZnJvbSBcIkB1cGxvYWR0aGluZy9zaGFyZWRcIjtcbmltcG9ydCB7IHVuc2FmZUNvZXJjZSB9IGZyb20gXCJlZmZlY3QvRnVuY3Rpb25cIjtcblxuLy8jcmVnaW9uIHNyYy9faW50ZXJuYWwvZGVmZXJyZWQudHNcbmNvbnN0IGNyZWF0ZURlZmVycmVkID0gKCkgPT4ge1xuXHRsZXQgcmVzb2x2ZTtcblx0bGV0IHJlamVjdDtcblx0Y29uc3QgYWMgPSBuZXcgQWJvcnRDb250cm9sbGVyKCk7XG5cdGNvbnN0IHByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzLCByZWopID0+IHtcblx0XHRyZXNvbHZlID0gcmVzO1xuXHRcdHJlamVjdCA9IHJlajtcblx0fSk7XG5cdHJldHVybiB7XG5cdFx0cHJvbWlzZSxcblx0XHRhYyxcblx0XHRyZXNvbHZlLFxuXHRcdHJlamVjdFxuXHR9O1xufTtcblxuLy8jZW5kcmVnaW9uXG4vLyNyZWdpb24gc3JjL19pbnRlcm5hbC9yYW5kb20taGV4LnRzXG5jb25zdCByYW5kb21IZXhTdHJpbmcgPSBmdW5jdGlvbigpIHtcblx0Y29uc3QgY2hhcmFjdGVycyA9IFwiYWJjZGVmMDEyMzQ1Njc4OVwiO1xuXHRjb25zdCBjaGFyYWN0ZXJzTGVuZ3RoID0gY2hhcmFjdGVycy5sZW5ndGg7XG5cdHJldHVybiBmdW5jdGlvbihsZW5ndGgpIHtcblx0XHRsZXQgcmVzdWx0ID0gXCJcIjtcblx0XHRmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSByZXN1bHQgKz0gY2hhcmFjdGVycy5jaGFyQXQoTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogY2hhcmFjdGVyc0xlbmd0aCkpO1xuXHRcdHJldHVybiByZXN1bHQ7XG5cdH07XG59KCk7XG5jb25zdCBnZW5lcmF0ZVRyYWNlSGVhZGVycyA9ICgpID0+IHtcblx0Y29uc3QgdHJhY2VJZCA9IHJhbmRvbUhleFN0cmluZygzMik7XG5cdGNvbnN0IHNwYW5JZCA9IHJhbmRvbUhleFN0cmluZygxNik7XG5cdGNvbnN0IHNhbXBsZWQgPSBcIjAxXCI7XG5cdHJldHVybiB7XG5cdFx0YjM6IGAke3RyYWNlSWR9LSR7c3BhbklkfS0ke3NhbXBsZWR9YCxcblx0XHR0cmFjZXBhcmVudDogYDAwLSR7dHJhY2VJZH0tJHtzcGFuSWR9LSR7c2FtcGxlZH1gXG5cdH07XG59O1xuXG4vLyNlbmRyZWdpb25cbi8vI3JlZ2lvbiBzcmMvX2ludGVybmFsL3V0LXJlcG9ydGVyLnRzXG5jb25zdCBjcmVhdGVBUElSZXF1ZXN0VXJsID0gKGNvbmZpZykgPT4ge1xuXHRjb25zdCB1cmwgPSBuZXcgVVJMKGNvbmZpZy51cmwpO1xuXHRjb25zdCBxdWVyeVBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXModXJsLnNlYXJjaCk7XG5cdHF1ZXJ5UGFyYW1zLnNldChcImFjdGlvblR5cGVcIiwgY29uZmlnLmFjdGlvblR5cGUpO1xuXHRxdWVyeVBhcmFtcy5zZXQoXCJzbHVnXCIsIGNvbmZpZy5zbHVnKTtcblx0dXJsLnNlYXJjaCA9IHF1ZXJ5UGFyYW1zLnRvU3RyaW5nKCk7XG5cdHJldHVybiB1cmw7XG59O1xuLyoqXG4qIENyZWF0ZXMgYSBcImNsaWVudFwiIGZvciByZXBvcnRpbmcgZXZlbnRzIHRvIHRoZSBVcGxvYWRUaGluZyBzZXJ2ZXIgdmlhIHRoZSB1c2VyJ3MgQVBJIGVuZHBvaW50LlxuKiBFdmVudHMgYXJlIGhhbmRsZWQgaW4gXCIuL2hhbmRsZXIudHMgc3RhcnRpbmcgYXQgTDExMlwiXG4qL1xuY29uc3QgY3JlYXRlVVRSZXBvcnRlciA9IChjZmcpID0+ICh0eXBlLCBwYXlsb2FkKSA9PiBNaWNyby5nZW4oZnVuY3Rpb24qICgpIHtcblx0Y29uc3QgdXJsID0gY3JlYXRlQVBJUmVxdWVzdFVybCh7XG5cdFx0dXJsOiBjZmcudXJsLFxuXHRcdHNsdWc6IGNmZy5lbmRwb2ludCxcblx0XHRhY3Rpb25UeXBlOiB0eXBlXG5cdH0pO1xuXHRjb25zdCBoZWFkZXJzID0gbmV3IEhlYWRlcnMoeWllbGQqIE1pY3JvLnByb21pc2UoYXN5bmMgKCkgPT4gdHlwZW9mIGNmZy5oZWFkZXJzID09PSBcImZ1bmN0aW9uXCIgPyBhd2FpdCBjZmcuaGVhZGVycygpIDogY2ZnLmhlYWRlcnMpKTtcblx0aWYgKGNmZy5wYWNrYWdlKSBoZWFkZXJzLnNldChcIngtdXBsb2FkdGhpbmctcGFja2FnZVwiLCBjZmcucGFja2FnZSk7XG5cdGhlYWRlcnMuc2V0KFwieC11cGxvYWR0aGluZy12ZXJzaW9uXCIsIHZlcnNpb24pO1xuXHRoZWFkZXJzLnNldChcIkNvbnRlbnQtVHlwZVwiLCBcImFwcGxpY2F0aW9uL2pzb25cIik7XG5cdGhlYWRlcnMuc2V0KFwiYjNcIiwgY2ZnLnRyYWNlSGVhZGVycy5iMyk7XG5cdGhlYWRlcnMuc2V0KFwidHJhY2VwYXJlbnRcIiwgY2ZnLnRyYWNlSGVhZGVycy50cmFjZXBhcmVudCk7XG5cdGNvbnN0IHJlc3BvbnNlID0geWllbGQqIGZldGNoRWZmKHVybCwge1xuXHRcdG1ldGhvZDogXCJQT1NUXCIsXG5cdFx0Ym9keTogSlNPTi5zdHJpbmdpZnkocGF5bG9hZCksXG5cdFx0aGVhZGVyc1xuXHR9KS5waXBlKFxuXHRcdE1pY3JvLmFuZFRoZW4ocGFyc2VSZXNwb25zZUpzb24pLFxuXHRcdC8qKlxuXHRcdCogV2UgZG9uJ3QgX25lZWRfIHRvIHZhbGlkYXRlIHRoZSByZXNwb25zZSBoZXJlLCBqdXN0IGNhc3QgaXQgZm9yIG5vdy5cblx0XHQqIEFzIG9mIG5vdywgQGVmZmVjdC9zY2hlbWEgaW5jbHVkZXMgcXVpdGUgYSBmZXcgYnl0ZXMgd2UgY3V0IG91dCBieSB0aGlzLi4uXG5cdFx0KiBXZSBoYXZlIFwic3Ryb25nIHR5cGluZ1wiIG9uIHRoZSBiYWNrZW5kIHRoYXQgZW5zdXJlcyB0aGUgc2hhcGUgc2hvdWxkIG1hdGNoLlxuXHRcdCovXG5cdFx0TWljcm8ubWFwKHVuc2FmZUNvZXJjZSksXG5cdFx0TWljcm8uY2F0Y2hUYWcoXCJGZXRjaEVycm9yXCIsIChlKSA9PiBNaWNyby5mYWlsKG5ldyBVcGxvYWRUaGluZ0Vycm9yKHtcblx0XHRcdGNvZGU6IFwiSU5URVJOQUxfQ0xJRU5UX0VSUk9SXCIsXG5cdFx0XHRtZXNzYWdlOiBgRmFpbGVkIHRvIHJlcG9ydCBldmVudCBcIiR7dHlwZX1cIiB0byBVcGxvYWRUaGluZyBzZXJ2ZXJgLFxuXHRcdFx0Y2F1c2U6IGVcblx0XHR9KSkpLFxuXHRcdE1pY3JvLmNhdGNoVGFnKFwiQmFkUmVxdWVzdEVycm9yXCIsIChlKSA9PiBNaWNyby5mYWlsKG5ldyBVcGxvYWRUaGluZ0Vycm9yKHtcblx0XHRcdGNvZGU6IGdldEVycm9yVHlwZUZyb21TdGF0dXNDb2RlKGUuc3RhdHVzKSxcblx0XHRcdG1lc3NhZ2U6IGUuZ2V0TWVzc2FnZSgpLFxuXHRcdFx0Y2F1c2U6IGUuanNvblxuXHRcdH0pKSksXG5cdFx0TWljcm8uY2F0Y2hUYWcoXCJJbnZhbGlkSnNvblwiLCAoZSkgPT4gTWljcm8uZmFpbChuZXcgVXBsb2FkVGhpbmdFcnJvcih7XG5cdFx0XHRjb2RlOiBcIklOVEVSTkFMX0NMSUVOVF9FUlJPUlwiLFxuXHRcdFx0bWVzc2FnZTogXCJGYWlsZWQgdG8gcGFyc2UgcmVzcG9uc2UgZnJvbSBVcGxvYWRUaGluZyBzZXJ2ZXJcIixcblx0XHRcdGNhdXNlOiBlXG5cdFx0fSkpKVxuXHQpO1xuXHRyZXR1cm4gcmVzcG9uc2U7XG59KTtcblxuLy8jZW5kcmVnaW9uXG5leHBvcnQgeyBjcmVhdGVEZWZlcnJlZCwgY3JlYXRlVVRSZXBvcnRlciwgZ2VuZXJhdGVUcmFjZUhlYWRlcnMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0LXJlcG9ydGVyLUM4NDQ2dy12LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/uploadthing/dist/ut-reporter-C8446w-v.js\n");

/***/ })

};
;